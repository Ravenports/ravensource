DEF[PORTVERSION]=	24.1.0
# ----------------------------------------------------------------------------

NAMEBASE=		nodejs
VERSION=		${PORTVERSION}
KEYWORDS=		www lang
VARIANTS=		std
SDESC[std]=		Evented I/O for V8 JavaScript
HOMEPAGE=		https://nodejs.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://nodejs.org/dist/v${PORTVERSION}/
DISTFILE[1]=		node-v${PORTVERSION}.tar.gz:main

SPKGS[std]=		set primary dev man docs

OPTIONS_AVAILABLE=	SYSTEM SMALL_EMBED NO_SUPPORT
OPTIONS_STANDARD=	SYSTEM SMALL_EMBED NO_SUPPORT
OPTGROUP_RADIO=		ICU_OPTIONS
OPTDESCR[ICU_OPTIONS]=	Support for Unicode
OPTGROUP[ICU_OPTIONS]=	SYSTEM SMALL_EMBED NO_SUPPORT
OPT_ON[linux]=		SMALL_EMBED
OPT_ON[sunos]=		SMALL_EMBED
OPT_ON[midnightbsd]=	SMALL_EMBED
OPT_ON[dragonfly]=	SMALL_EMBED
OPT_ON[freebsd]=	SMALL_EMBED
OPT_ON[netbsd]=		NO_SUPPORT

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		www/node

BROKEN[sunos]=		The ld.sun linker does not support required options

# system-icu causes segfault on all systems, don't use it until further notice

BUILD_DEPENDS=		libnghttp2:dev:std
			nghttp3:dev:std
			libuv:dev:std
BUILDRUN_DEPENDS=	libuv:primary:std
			libnghttp2:primary:std
			nghttp3:primary:std

USES=			execinfo gmake pkgconfig shebangfix cpe zlib
			python:build c++:primary
CPE_VENDOR=		nodejs
CPE_PRODUCT=		node.js
DISTNAME=		node-v${PORTVERSION}
MUST_CONFIGURE=		yes
CONFIGURE_ARGS=		--prefix={{PREFIX}}
			--without-npm
			--shared-libuv
			--shared-zlib
			--shared-nghttp2
			--shared-nghttp3
# #			--debug
SHEBANG_FILES=		tools/specialize_node_d.py
MAKE_ENV=		CC.host={{CC}}
			CXX.host={{CXX}}
			LINK.host={{CXX}}
			LINK.target={{CXX}}
INSTALL_REQ_TOOLCHAIN=	yes

VAR_OPSYS[netbsd]=	CONFIGURE_ARGS=--dest-os=netbsd
VAR_OPSYS[midnightbsd]=	CONFIGURE_ARGS=--dest-os=freebsd

[SYSTEM].DESCRIPTION=			Link with installed ICU library
[SMALL_EMBED].DESCRIPTION=		Embed a limited set of ICU data
[NO_SUPPORT].DESCRIPTION=		Build node without ICU support

[SYSTEM].CONFIGURE_ARGS_ON=		--with-intl=system-icu
[SMALL_EMBED].CONFIGURE_ARGS_ON=	--with-intl=small-icu
[NO_SUPPORT].CONFIGURE_ARGS_ON=		--with-intl=none

[SYSTEM].BUILD_DEPENDS_ON=		icu:dev:std
[SYSTEM].BUILDRUN_DEPENDS_ON=		icu:primary:std

pre-configure:
	${GREP} -rl "/usr/local" ${WRKSRC} | \
		${XARGS} ${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|g'
	# So many different ways to run python. Fix them all.
	${REINPLACE_CMD} -e 's|/usr/bin/env python|${PYTHON_CMD}|' \
		${WRKSRC}/configure
	${FIND} ${WRKSRC} -type f -name '*.gyp*' -print0 | \
		${XARGS} -0 ${REINPLACE_CMD} \
			-e "s|'python'|'${PYTHON_CMD}'|" \
			-e 's|<!(python |<!(${PYTHON_CMD} |' \
			-e 's|\&\& python |\&\& ${PYTHON_CMD} |'
	# fix inability for torque to find libz
	${REINPLACE_CMD} -e 's|@RAVRPATH@|-Wl,-rpath,${PREFIX}/lib|' \
		${WRKSRC}/tools/v8_gypfiles/v8.gyp
	# fix openssl config files for Dragonfly and NetBSD
	${GREP} -rl "(defined(__FreeBSD__) || defined(__OpenBSD__))" \
	${WRKSRC}/deps/openssl/config | ${XARGS} ${REINPLACE_CMD} -E -e \
	"s/\(defined\(__FreeBSD__\) \|\| defined\(__OpenBSD__\)\)/(defined(__FreeBSD__) || defined(__DragonFly__) || defined(__NetBSD__) || defined(__OpenBSD__))/"

	${FIND} ${WRKSRC} -name "*.bak" -delete

pre-configure-dragonfly:
	# using freebsd's config, but large pages not supported
	${REINPLACE_CMD} -e '/"linux freebsd mac"/ s/ freebsd//' \
		${WRKSRC}/node.gyp

pre-configure-netbsd:
	# hack to avoid undefined reference to 'engine_load_devcrypto_int'
	${REINPLACE_CMD} -e 's/ifndef OPENSSL_NO_DEVCRYPTOENG/if 0/' \
		${WRKSRC}/deps/openssl/openssl/crypto/init.c
	${REINPLACE_CMD} -e 's/=="freebsd"/=="netbsd"/g' \
		${WRKSRC}/deps/openssl/*.gypi

post-configure-netbsd:
	# Fixes "Fatal process OOM in Failed to reserve virtual memory for CodeRange" error
	${REINPLACE_CMD} -E 's|(call do_cmd,link\))|\1\n\t${PAXCTL} +m $$@|'\
		${WRKSRC}/out/tools/v8_gypfiles/mksnapshot.target.mk \
		${WRKSRC}/out/node_mksnapshot.target.mk

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/node
	${CHOWN} ${MANMODE} ${STAGEDIR}${PREFIX}/share/man/man1/node.1

post-install-netbsd:
	${PAXCTL} +m ${STAGEDIR}${PREFIX}/bin/node
