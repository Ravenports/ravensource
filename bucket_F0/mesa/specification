DEF[PORTVERSION]=	22.3.5
# ----------------------------------------------------------------------------

NAMEBASE=		mesa
VERSION=		${PORTVERSION}
REVISION=		1
KEYWORDS=		graphics
VARIANTS=		standard
SDESC[standard]=	Mesa 3D Graphics Library
HOMEPAGE=		https://www.mesa3d.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://mesa.freedesktop.org/archive/
			ftp://ftp.freedesktop.org/pub/mesa/
DISTFILE[1]=		mesa-${PORTVERSION}.tar.xz:main

SPKGS[standard]=	complete libs drivers

# WAYLAND only for DF and can't be used due to circularly dep
# from graphviz (mesa)
OPTIONS_AVAILABLE=	X86_DRIVERS ARM_DRIVERS LLVMPIPE WAYLAND
OPTIONS_STANDARD=	X86_DRIVERS ARM_DRIVERS LLVMPIPE
OPT_ON[x86_64]=		X86_DRIVERS
OPT_ON[i386]=		X86_DRIVERS
OPT_ON[aarch64]=	ARM_DRIVERS
OPT_ON[freebsd]=	LLVMPIPE//i386|x86_64
OPT_ON[dragonfly]=	LLVMPIPE//i386|x86_64
OPT_ON[linux]=		LLVMPIPE//i386|x86_64
# OPT_ON[sunos]=	LLVMPIPE	# libclc stopped building again

LICENSE=		MIT:libs
			CUSTOM1:libs
			CUSTOM2:libs
LICENSE_FILE=		MIT:{{WRKDIR}}/LICENSE_MIT
			CUSTOM1:{{WRKDIR}}/LICENSE_KHRONOS
			CUSTOM2:{{WRKDIR}}/LICENSE_SGI
LICENSE_NAME=		CUSTOM1:"Kronos License (MIT with modifications)"
			CUSTOM2:"SGI Free Software License B"
LICENSE_AWK=		MIT:"^$$"
			CUSTOM2:"^$$"
LICENSE_SOURCE=		MIT:{{WRKSRC}}/include/GL/gl.h
			CUSTOM2:{{WRKSRC}}/src/glx/eval.c
LICENSE_SCHEME=		multi

FPC_EQUIVALENT=		graphics/mesa-libs

BUILD_DEPENDS=		libdrm:dev:standard
			libelf:dev:standard
			libelf:primary:standard
			libpthread-stubs:single:standard
			libva:single:standard
			libvdpau:single:standard
			python-Mako:single:python_used
BUILDRUN_DEPENDS=	libdrm:primary:standard
EXRUN[drivers]=		mesa:libs:standard
			libelf:primary:standard

USES=			cpe bison gettext:build gmake meson pkgconfig
			zstd zlib expat shebangfix solaris-funcs
			python:build c++:libs,drivers
XORG_COMPONENTS=	x11 xdamage xext xfixes xshmfence xxf86vm xv xrandr xcb
CPE_VENDOR=		mesa3d
SOL_FUNCTIONS=		dirfd:src/util/disk_cache.c
			asprintf:src/util/anon_file.c
			asprintf:src/mesa/drivers/dri/common/megadriver_stub.c
			asprintf:src/loader/loader.c
			asprintf:src/egl/main/eglcurrent.c
			asprintf:src/util/u_string.h
			asprintf:src/amd/common/ac_rtld.c
			strnlen:src/util/ralloc.c
			strnlen:src/mesa/main/errors.c
			strndup:src/loader/loader.c
			strndup:src/egl/drivers/dri2/platform_x11.c
			strndup:src/gallium/drivers/r600/evergreen_compute.c
			strndup:src/gallium/drivers/radeonsi/si_debug.c
MESON_ARGS=		-Dplatforms=x11{{WAYPLAT}}
			-Dzstd=enabled
			-Ddri3=enabled
			-Dgallium-drivers={{GALLIUM_DRIVERS:tW:tl:C/[[:space:]]/,/g}}
			-Dgallium-vdpau=enabled
			-Dosmesa=true
			-Dlibunwind=disabled
			-Dgles1=disabled
			-Dgles2=disabled
			-Dglx=auto
			-Dopengl=true
			-Degl=disabled
			-Dvulkan-drivers={{VULKAN_DRIVERS:tW:tl:C/[[:space:]]/,/g}}

# There are issues that need to be fixed to use TLS model "initial-exec"
# So stick with "global-dynamic"'s model for now. kan@ is working on a
# patch for rtld. We might want to backport global-dynamic or
# pthread_setspecific which it uses now by default. But since this
# configure switch is going away ...
# https://lists.freebsd.org/pipermail/freebsd-arch/2016-February/017699.html

INSTALL_TARGET=		install-strip
INSTALL_REQ_TOOLCHAIN=	yes
SHEBANG_OLD_PYTHON=	/usr/bin/env[[:space:]]python2
			/usr/bin/python2
			/bin/env[[:space:]]python
SHEBANG_FILES=		src/gallium/*/*/*.py
			src/gallium/tools/trace/*.py
			src/gallium/drivers/svga/svgadump/svga_dump.py
			src/mapi/glapi/gen/*.py
			src/mapi/mapi_abi.py
			src/mesa/main/get_*.py
			src/util/format_srgb.py
			src/amd/*/*.py
			src/intel/genxml/gen_pack_header.py
CONFIGURE_ENV=		ax_cv_check_cflags___Wno_initializer_overrides=no
CFLAGS=			-Wno-pointer-sign

VAR_OPSYS[sunos]=	CPPFLAGS=-D__EXTENSIONS__=1
			CPPFLAGS=-Wno-unused-function
			CXXFLAGS=-Drestrict=__restrict__
			CFLAGS=-D_POSIX_PTHREAD_SEMANTICS
			CFLAGS=-DF_DUPFD_CLOEXEC=F_DUPFD
			CFLAGS=-Wno-incompatible-pointer-types
			LDFLAGS=-lsocket
			LDFLAGS=-lnsl
			MAKEFILE_LINE=MESON_ARGS+=-Dshader-cache=false

[X86_DRIVERS].DESCRIPTION=		Build drivers for i386 and x86_64 architectures
[ARM_DRIVERS].DESCRIPTION=		Build drivers for aarch64 architecture
[LLVMPIPE].DESCRIPTION=			Build LLVM-based drivers and libraries
[WAYLAND].DESCRIPTION=			Build Vulkan drivers for Wayland platform

[LLVMPIPE].USES_ON=			clang:keepcc
[LLVMPIPE].BUILD_DEPENDS_ON=		libclc:single:standard
					opencl-headers:single:standard
[LLVMPIPE].BUILDRUN_DEPENDS_ON=		llvm:single:standard
					ocl-icd:primary:standard
[LLVMPIPE].RUN_DEPENDS_ON=		clang:dynlibs:standard
[LLVMPIPE].MAKEFILE_ON=			GALLIUM_LLVM_DRIVERS+=R600
					GALLIUM_LLVM_DRIVERS+=RADEONSI
					GALLIUM_DRIVERS+={{GALLIUM_LLVM_DRIVERS}}
					MESON_ARGS+=-Dllvm=true
					MESON_ARGS+=-Dgallium-va=enabled
					MESON_ARGS+=-Dgallium-opencl=icd
[LLVMPIPE].MAKEFILE_OFF=		MESON_ARGS+=-Dgallium-opencl=disabled

[X86_DRIVERS].MAKEFILE_ON=		GALLIUM_DRIVERS+=R300
					GALLIUM_DRIVERS+=SVGA
					VULKAN_DRIVERS+={{VULKAN_DRIVERS_X86}}
[ARM_DRIVERS].MAKEFILE_ON=		GALLIUM_DRIVERS+=FREEDRENO
					GALLIUM_DRIVERS+=VC4

[WAYLAND].BUILD_DEPENDS_ON=		wayland-protocols:single:standard
					python-Mako:single:python_default
[WAYLAND].BUILDRUN_DEPENDS_ON=		wayland:primary:standard
[WAYLAND].MAKEFILE_ON=			WAYPLAT=,wayland
					VULKAN_DRIVERS+=INTEL
					VULKAN_DRIVERS_X86+=RADEON

post-extract:
	${AWK} '/Copyright/,/DEALINGS/' ${WRKSRC}/include/GL/glext.h \
		> ${WRKDIR}/LICENSE_KHRONOS

post-patch:
	${REINPLACE_CMD} -e 's|/etc/|${PREFIX}/etc/|g' \
		${WRKSRC}/src/util/xmlconfig.c

post-install:
	${RM} ${STAGEDIR}${PREFIX}/lib/libGL.so*
	${RM} ${STAGEDIR}${PREFIX}/include/GL/g*.h
	${RM} ${STAGEDIR}${PREFIX}/lib/pkgconfig/gl.pc
	${RM} -r ${STAGEDIR}${PREFIX}/include/KHR
