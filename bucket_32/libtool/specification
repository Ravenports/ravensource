DEF[PORTVERSION]=	EXTRACT_INFO(LIBTOOL_VERSION)
# ----------------------------------------------------------------------------

NAMEBASE=		libtool
VERSION=		${PORTVERSION}
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Generic shared library support script
HOMEPAGE=		https://www.gnu.org/software/libtool/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNU/libtool
DISTFILE[1]=		libtool-${PORTVERSION}.tar.xz:main

SPKGS[std]=		set primary man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		GPLv2+:primary
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_AWK=		TERMS:"^\#\# ------ \#\#"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/libtoolize.in
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/libtool

# requires gm4 for both build and run time, but that's the version of m4
# used by raven-sysroot.  There could be an issue if somebody tries to
# use libtool outside of ravenports when they have an older m4 on their
# system.  For now, don't worry about it and assume it's a build only tool.
# Accordingly, don't install INFO=libtool which requires makeinfo which
# has a huge dependency chain.

USES=			cpe
MUST_CONFIGURE=		gnu
CPE_VENDOR=		gnu
CPE_PRODUCT=		libtool
CONFIGURE_ARGS=		--disable-ltdl-install

VAR_OPSYS[sunos]=	CONFIGURE_ENV=LT_SYS_LIBRARY_PATH=/lib/amd64:/usr/lib/amd64

post-patch:
	${RM} ${WRKSRC}/doc/*.info*
	${REINPLACE_CMD} -e "/INFO_DEPS =/d" ${WRKSRC}/Makefile.in
	${FIND} ${WRKSRC} -type f | ${XARGS} ${TOUCH}

post-install-sunos:
	# During OmniOS bootstrap, the nawk system() command is simply ignored.
	# hopefully this self-corrects.  To complete the bootstrap, use this hack
	${AWK} '/^\. ["]/{exit}; {print}' ${WRKSRC}/libtoolize > /tmp/libtoolize
	${CAT} ${WRKSRC}/build-aux/funclib.sh >> /tmp/libtoolize
	${CAT} ${WRKSRC}/build-aux/options-parser >> /tmp/libtoolize
	${CAT} ${WRKSRC}/build-aux/extract-trace >> /tmp/libtoolize
	${ECHO} "" >> /tmp/libtoolize
	${AWK} '/^# Set a version string./,EOF' ${WRKSRC}/libtoolize >> /tmp/libtoolize
	${INSTALL_SCRIPT} /tmp/libtoolize ${STAGEDIR}${PREFIX}/bin/libtoolize
