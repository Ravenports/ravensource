DEF[PORTVERSION]=	138.0.1
# DEF[CPE_SW_EDITION]=	esr
# DEF[TVER]=		${PORTVERSION}${CPE_SW_EDITION}
DEF[TVER]=		${PORTVERSION}
DEF[MBSD64_TARGET]=	EXTRACT_INFO(MIDNIGHT64_CC_TARGET)
DEF[CLANGBASE]=		clang
DEF[LLVMBASE]=		llvm
# ----------------------------------------------------------------------------

NAMEBASE=		thunderbird
VERSION=		${PORTVERSION}
KEYWORDS=		mail net_im news
VARIANTS=		std
SDESC[std]=		Mozilla Thunderbird mail/newsgroup client
HOMEPAGE=		https://www.thunderbird.net/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		MOZILLA/thunderbird/releases/${TVER}/source
DISTFILE[1]=		thunderbird-${TVER}.source.tar.xz:main

SPKGS[std]=		single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		MPL:single
LICENSE_FILE=		MPL:stock
LICENSE_TERMS=		single:{{WRKSRC}}/toolkit/content/license.html
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		mail/thunderbird

BUILD_DEPENDS=		aom:dev:std
			autoconf213:single:std
# wait4support		botan:dev:std
			cbindgen:single:std
			${CLANGBASE}:set:std
			dav1d:dev:std
			evdev-proto:single:std
			ffmpeg:dev:std
			icu:dev:std
			libcanberra:dev:std
			libevent:dev:std
			libnotify:dev:std
			libproxy:dev:std
			${LLVMBASE}:tools:std
			nasm:primary:std
			nodejs:primary:std
			nss:dev:std
			rust:single:std
# #			sccache:primary:std
			WebP:dev:std
			yasm:primary:std
			zip:primary:std
			dbus-glib:dev:std
			pciutils:dev:std
			startup-notification:dev:std
BUILDRUN_DEPENDS=	aom:primary:std
# wait4support		botan:primary:std
			dav1d:primary:std
			dbus-glib:primary:std
			ffmpeg:primary:std
			harfbuzz:primary:std
			icu:primary:std
			libcanberra:primary:std
			libevent:primary:std
			libffi:primary:std
			libnotify:primary:std
			libproxy:primary:std
			nss:primary:std
			startup-notification:primary:std
			WebP:primary:std
			pciutils:primary:std

B_DEPS[linux]=		alsa-lib:dev:std
			sndio:dev:std
BR_DEPS[linux]=		sndio:primary:std
			alsa-lib:primary:std
B_DEPS[netbsd]=		sndio:dev:std
BR_DEPS[netbsd]=	sndio:primary:std

USES=			cpe desktop-utils:single gmake jpeg png zlib
			perl:build pkgconfig iconv bz2 python:build,sqlite
XORG_COMPONENTS=	x11 xcb xcomposite xdamage xext xfixes xrender xt
			pixman
GNOME_COMPONENTS=	gconf gtk3 gdkpixbuf pango
CPE_VENDOR=		mozilla
# CPE_SW_EDITION=		${CPE_SW_EDITION}
MUST_CONFIGURE=		yes
CONFIGURE_OUTSOURCE=	yes
MOUNT_PROCFS=		yes

QMAKE_ARGS=		--prefix="{{PREFIX}}"
			--with-system-nss
			--with-system-nspr
			--with-system-zlib
			--with-system-icu
			--with-system-png
			--with-system-jpeg
			--with-system-libevent
			--with-system-harfbuzz
			--with-system-graphite2
			--with-system-av1
			--with-system-webp
# wait4support		--with-system-botan
			--enable-system-ffi
			--enable-system-pixman
			--enable-install-strip
			--enable-strip
			--enable-libproxy
			--enable-release
			--enable-optimize
			--enable-official-branding
			--enable-application=comm/mail
			--enable-update-channel=release
# #			--enable-rust-simd
			--with-intl-api
			--disable-alsa
			--disable-debug
			--disable-debug-symbols
			--disable-dtrace
			--disable-jack
			--disable-webrtc
			--disable-profiling
			--disable-pulseaudio
			--disable-tests
			--disable-updater
			--disable-hardening
			--without-wasm-sandboxed-libraries
CONFIGURE_ENV=		PYTHON3={{PYTHON_CMD}}
			SETUPTOOLS_USE_DISTUTILS=stdlib
MAKE_ENV=		PYTHON3={{PYTHON_CMD}}
			CXXSTDLIB="stdc++"

VAR_OPSYS[linux]=	QMAKE_ARGS=--disable-elf-hack
			QMAKE_ARGS=--enable-audio-backends=sndio
			CONFIGURE_ENV=PKG_CONFIG_LIBDIR={{LOCALBASE}}/lib/pkgconfig
VAR_OPSYS[netbsd]=	QMAKE_ARGS=--enable-audio-backends=sndio
VAR_OPSYS[midnightbsd]=	MAKEFILE_LINE=CONFIGURE_TARGET=${MBSD64_TARGET}

post-patch:
	${REINPLACE_CMD} -e 's|%%LOCALBASE%%|${LOCALBASE}|g' \
		${WRKSRC}/comm/mail/app/nsMailApp.cpp \
		${WRKSRC}/browser/app/nsBrowserApp.cpp
	(cd ${WRKSRC}/gfx/angle/checkout/src/compiler/translator && \
		${REINPLACE_CMD} -e 's|<math.h>|<cmath>|' \
		InfoSink.h IntermNode.cpp)

	# disable SCTP
	${REINPLACE_CMD} -e 's|MOZ_SCTP|MOZ_DISABLE_SCTP|' \
		${WRKSRC}/netwerk/moz.build

	# alsa headers use 'u_int32_t' and other BerkeleyDB/nvi
	# fixed types (_XOPEN_SOURCE)
	${REINPLACE_CMD} -e 's@_XOPEN_SOURCE@&___@g' \
		${WRKSRC}/media/libcubeb/src/cubeb_alsa.c
	${REINPLACE_CMD} -e 's@_POSIX_SOURCE@&___@g' \
		${WRKSRC}/media/libcubeb/src/cubeb_jack.cpp

	# Fix midnight
	${REINPLACE_CMD} -e "s|%%MBSD64_TGT%%|${MBSD64_TARGET}|" \
		${WRKSRC}/build/autoconf/config.guess
	# Set mozilla options
	@${ECHO_CMD} "--=> Setting configuration <=--"
	@for arg in ${QMAKE_ARGS}; do \
		${ECHO_CMD} ".mozconfig <<  $$arg" ;\
		${ECHO_CMD} ac_add_options $$arg >> ${WRKSRC}/.mozconfig ;\
	done
	@${ECHO_CMD} LDFLAGS=\"-lm -Wl,-rpath,${PREFIX}/lib/thunderbird\" \
		>> ${WRKSRC}/.mozconfig

	# disable rust checksums
.for RD in mtu quinn-udp
	${REINPLACE_CMD} -e 's/"files":{[^}]*}/"files":{}/' \
		 ${WRKSRC}/comm/third_party/rust/${RD}/.cargo-checksum.json
.endfor

pre-configure:
	${REINPLACE_CMD} -e "s|%%MBSD64_TGT%%|${MBSD64_TARGET}|" \
		${WRKSRC}/build/autoconf/config.guess

pre-configure-netbsd:
	# Fix error: expected constructor __RCSID("$NetBSD: keyring.c,v 1.50 2011/06/25 00:37:44 agc Exp $");
	${REINPLACE_CMD} -e 's/__NetBSD__/__NEVER__/' \
		${WRKSRC}/comm/third_party/rnp/src/librekey/key_store_pgp.cpp

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/share/applications
	${MKDIR} ${STAGEDIR}${PREFIX}/share/pixmaps
	${INSTALL_DATA} ${FILESDIR}/thunderbird.desktop \
		${STAGEDIR}${PREFIX}/share/applications
	(cd ${STAGEDIR}${PREFIX}/share/pixmaps && ${LN} -sf \
		../../lib/thunderbird/chrome/icons/default/default48.png \
		thunderbird.png)
	# regenerate symlink to avoid absolute paths
	${RM} ${STAGEDIR}${PREFIX}/bin/thunderbird
	(cd ${STAGEDIR}${PREFIX}/bin && \
		${LN} -sf ../lib/thunderbird/thunderbird thunderbird)

post-install-netbsd:
	${PAXCTL} +m ${STAGEDIR}${PREFIX}/lib/thunderbird/thunderbird
	${PAXCTL} +m ${STAGEDIR}${PREFIX}/lib/thunderbird/thunderbird-bin
