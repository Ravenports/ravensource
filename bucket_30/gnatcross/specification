DEF[PORTVERSION]=	EXTRACT_INFO(GCC14_VERSION)
DEF[REVISION]=		EXTRACT_INFO(GCC14_GNATCROSS_REVISION)
DEF[MS_SUBDIR]=		EXTRACT_INFO(GCC14_MS_SUBDIR)
DEF[IDENTIFICATION]=	EXTRACT_INFO(GCC14_IDENTIFICATION)
DEF[GCC_VERSION]=	EXTRACT_INFO(GCC14_VERSION)
DEF[FREEBSD_11]=	EXTRACT_INFO(GNATCROSS_FREEBSD_11)
DEF[FREEBSD_12]=	EXTRACT_INFO(GNATCROSS_FREEBSD_12)
DEF[MBSD64_TARGET]=	EXTRACT_INFO(MIDNIGHT64_CC_TARGET)
DEF[MBSD32_TARGET]=	EXTRACT_INFO(MIDNIGHT32_CC_TARGET)
DEF[DRACO_TAG]=		14.3.0-base
DEF[DRACO_DIR]=		patches-14.3.0
DEF[DIST_SUBDIR]=	gcc14_${DRACO_TAG}
# ----------------------------------------------------------------------------

NAMEBASE=		gnatcross
VERSION=		${PORTVERSION}
REVISION=		${REVISION}
KEYWORDS=		lang
VARIANTS=		FARM64_R11 FAMD64_R12 FI386_R12 OMNIOS MAMD64_R3 MI386_R3
SDESC[FARM64_R11]=	C/Ada cross-compiler, target: FreeBSD/ARM64 (R11)
SDESC[FAMD64_R12]=	C/Ada cross-compiler, target: FreeBSD/AMD64 (R12)
SDESC[FI386_R12]=	C/Ada cross-compiler, target: FreeBSD/I386 (R11)
SDESC[OMNIOS]=		C/Ada cross-compiler, target: Solaris 10 (x86-64)
SDESC[MAMD64_R3]=	C/Ada cross-compiler, tgt: MidnightBSD/AMD64 (R3)
SDESC[MI386_R3]=	C/Ada cross-compiler, tgt: MidnightBSD/I386 (R3)
HOMEPAGE=		http://www.dragonlace.net
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main draco
SITES[main]=		GCC/${MS_SUBDIR}
SITES[draco]=		https://raw.githubusercontent.com/jrmarino/draco/${DRACO_TAG}/generated/${DRACO_DIR}/
DISTFILE[1]=		${IDENTIFICATION}.tar.xz:main
DISTFILE[2]=		patch-diff-ada:draco
DISTFILE[3]=		patch-diff-core:draco
DISTFILE[4]=		patch-diff-cxx:draco
DISTFILE[5]=		patch-diff-ada-testsuite:draco
DISTFILE[6]=		patch-diff-gcc-testsuite:draco
DIST_SUBDIR=		${DIST_SUBDIR}

SPKGS[FARM64_R11]=	single
SPKGS[FAMD64_R12]=	single
SPKGS[FI386_R12]=	single
SPKGS[OMNIOS]=		single
SPKGS[MAMD64_R3]=	single
SPKGS[MI386_R3]=	single

OPTIONS_AVAILABLE=	FARM64R11 FAMD64R12 FI386R12 OMNIOS MAMD64R3 MI386R3
OPTIONS_STANDARD=	none
VOPTS[FARM64_R11]=	FARM64R11=ON FAMD64R12=OFF FI386R12=OFF OMNIOS=OFF MAMD64R3=OFF MI386R3=OFF
VOPTS[FAMD64_R12]=	FARM64R11=OFF FAMD64R12=ON FI386R12=OFF OMNIOS=OFF MAMD64R3=OFF MI386R3=OFF
VOPTS[FI386_R12]=	FARM64R11=OFF FAMD64R12=OFF FI386R12=ON OMNIOS=OFF MAMD64R3=OFF MI386R3=OFF
VOPTS[OMNIOS]=		FARM64R11=OFF FAMD64R12=OFF FI386R12=OFF OMNIOS=ON MAMD64R3=OFF MI386R3=OFF
VOPTS[MAMD64_R3]=	FARM64R11=OFF FAMD64R12=OFF FI386R12=OFF OMNIOS=OFF MAMD64R3=ON MI386R3=OFF
VOPTS[MI386_R3]=	FARM64R11=OFF FAMD64R12=OFF FI386R12=OFF OMNIOS=OFF MAMD64R3=OFF MI386R3=ON

LICENSE=		GPLv3+:single LGPL3+:single
			GPLv3RLE+:single
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING3
			LGPL3+:{{WRKSRC}}/COPYING3.LIB
			GPLv3RLE+:{{WRKSRC}}/COPYING.RUNTIME
LICENSE_SCHEME=		multi

BUILD_DEPENDS=		gmp:dev:std
			mpfr:dev:std
			mpc:dev:std

PATCHFILES=		2 3 4 5 6

# Do not set MUST_CONFIGURE to gnu (avoid LATE_CONFIGURE_ARGS)

USES=			cpe gmake libtool perl:build zlib:build iconv:build
CPE_VENDOR=		gnu
CPE_PRODUCT=		gcc
MUST_CONFIGURE=		yes
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ARGS=		--enable-languages="c c++ ada fortran"
			--target={{XCCTARGET}}
			--build={{CONFIGURE_TARGET}}
			--program-prefix={{XCCTARGET}}-
			--prefix={{PREFIX}}
			--with-sysroot={{SRPREFIX}}
			--with-system-zlib
			--with-gmp={{LOCALBASE}}
			--with-mpfr={{LOCALBASE}}
			--with-mpc={{LOCALBASE}}
			--enable-threads=posix
			--enable-checking=release
			--disable-bootstrap
			--disable-shared
			--disable-libssp
			--disable-libgomp
			--disable-libquadmath
			--disable-libquadmath-support
			--disable-libsanitizer
			--disable-libitm
			--disable-libcc1
			--disable-nls
			{{TARGET_SPECIFIC}}
DISTNAME=		${IDENTIFICATION}
SUB_FILES=		messages-single.ucl
PLIST_SUB=		GCCVERS="${GCC_VERSION}"
			TARGET="{{XCCTARGET}}"
SUB_LIST=		TARGET="{{XCCTARGET}}"
INFRASTRUCTURE=		yes

VAR_OPSYS[dragonfly]=	CONFIGURE_ARGS=--with-libiconv-prefix={{WRKDIR}}/fake
VAR_OPSYS[freebsd]=	CONFIGURE_ARGS=--with-libiconv-prefix={{WRKDIR}}/fake
VAR_OPSYS[netbsd]=	CONFIGURE_ARGS=--with-libiconv-prefix={{WRKDIR}}/fake

[FARM64R11].DESCRIPTION=		Set target to FreeBSD/ARM64 (Release 11)
[FARM64R11].BUILDRUN_DEPENDS_ON=	gnatcross-binutils:single:FARM64_R11
[FARM64R11].MAKEFILE_ON=		OS_LABEL4VERS="[{{OPSYS}}/{{ARCH}} x FreeBSD_11/ARM64]"
					PREFIX={{LOCALBASE}}/FreeBSD11_ARM64
					SRPREFIX={{PREFIX}}/sysroot
					XCCTARGET=aarch64-raven-freebsd${FREEBSD_11}
					TARGET_SPECIFIC=#none

[FAMD64R12].DESCRIPTION=		Set target to FreeBSD/ARM64 (Release 12)
[FAMD64R12].BUILDRUN_DEPENDS_ON=	gnatcross-binutils:single:FAMD64_R12
[FAMD64R12].MAKEFILE_ON=		OS_LABEL4VERS="[{{OPSYS}}/{{ARCH}} x FreeBSD_12/AMD64]"
					PREFIX={{LOCALBASE}}/FreeBSD12_AMD64
					SRPREFIX={{PREFIX}}/sysroot
					XCCTARGET=x86_64-raven-freebsd${FREEBSD_12}
					TARGET_SPECIFIC=--disable-multilib

[FI386R12].DESCRIPTION=			Set target to FreeBSD/I386 (Release 12)
[FI386R12].BUILDRUN_DEPENDS_ON=		gnatcross-binutils:single:FI386_R12
[FI386R12].MAKEFILE_ON=			OS_LABEL4VERS="[{{OPSYS}}/{{ARCH}} x FreeBSD_12/I386]"
					PREFIX={{LOCALBASE}}/FreeBSD12_I386
					SRPREFIX={{PREFIX}}/sysroot
					XCCTARGET=i386-raven-freebsd${FREEBSD_12}
					TARGET_SPECIFIC=#none

[OMNIOS].DESCRIPTION=			Set target to OmniOS 11 (x86-64)
[OMNIOS].BUILDRUN_DEPENDS_ON=		gnatcross-binutils:single:OMNIOS
[OMNIOS].MAKEFILE_ON=			OS_LABEL4VERS="[{{OPSYS}}/{{ARCH}} x OmniOS/AMD64]"
					PREFIX={{LOCALBASE}}/OmniOS11
					SRPREFIX={{PREFIX}}/sysroot
					XCCTARGET=x86_64-raven-solaris2.11
					TARGET_SPECIFIC=--with-gnu-ld\
					--with-gnu-as\
					--enable-multilib\
					--enable-obsolete
# [OMNIOS].CONFIGURE_ENV_ON=		LD=ld.bfd

[MAMD64R3].DESCRIPTION=			Set target to MidnightBSD/AMD64 (Release 3)
[MAMD64R3].BUILDRUN_DEPENDS_ON=		gnatcross-binutils:single:MAMD64_R3
[MAMD64R3].MAKEFILE_ON=			OS_LABEL4VERS="[{{OPSYS}}/{{ARCH}} x MidnightBSD_3/AMD64]"
					PREFIX={{LOCALBASE}}/MidnightBSD_AMD64
					SRPREFIX={{PREFIX}}/sysroot
					XCCTARGET=${MBSD64_TARGET}
					TARGET_SPECIFIC=--disable-multilib

[MI386R3].DESCRIPTION=			Set target to MidnightBSD/I386 (Release 3)
[MI386R3].BUILDRUN_DEPENDS_ON=		gnatcross-binutils:single:MI386_R3
[MI386R3].MAKEFILE_ON=			OS_LABEL4VERS="[{{OPSYS}}/{{ARCH}} x MidnightBSD_3/I386]"
					PREFIX={{LOCALBASE}}/MidnightBSD_I386
					SRPREFIX={{PREFIX}}/sysroot
					XCCTARGET=${MBSD32_TARGET}
					TARGET_SPECIFIC=--disable-multilib

post-extract:
	# Personalize GNAT for each different machine
	${ECHO} "-=> GNATCROSS ${OS_LABEL4VERS}" > ${WRKSRC}/gcc/REVISION
	# Create license terms
	${HEAD} -n 19 ${WRKSRC}/gcc/gcc.h > ${WRKDIR}/TERMS
	${HEAD} -n 31 ${WRKSRC}/gcc/ada/adaint.h >> ${WRKDIR}/TERMS
	${HEAD} -n 18 ${WRKSRC}/libiberty/hex.c >> ${WRKDIR}/TERMS
	# Use iconv_pic.a instead of iconv.a
	if [ -f ${LOCALBASE}/include/iconv.h ]; then \
	${MKDIR} ${WRKDIR}/fake/include ${WRKDIR}/fake/lib ;\
	${INSTALL_DATA} ${LOCALBASE}/include/iconv.h \
		${WRKDIR}/fake/include/ ;\
	${INSTALL_DATA} ${LOCALBASE}/lib/libiconv_pic.a \
		${WRKDIR}/fake/lib/libiconv.a ;\
	fi

post-patch:
	# Update LINK_SPEC to add gcc-aux lib runpath in every binary
	@${ECHO} "Configuring LINK_SPEC runpath"
	${REINPLACE_CMD} -e 's;\@PREFIX\@;${PREFIX};' \
		${WRKSRC}/gcc/config/darwin.h \
		${WRKSRC}/gcc/config/dragonfly.h \
		${WRKSRC}/gcc/config/sol2.h \
		${WRKSRC}/gcc/config/i386/freebsd64.h \
		${WRKSRC}/gcc/config/i386/freebsd.h \
		${WRKSRC}/gcc/config/i386/gnu-user64.h \
		${WRKSRC}/gcc/config/aarch64/aarch64-freebsd.h

	# fix FreeBSD spec error
	${REINPLACE_CMD} -e 's|static:crtbeginT.o%s;||' \
		${WRKSRC}/gcc/config/freebsd-spec.h

post-patch-FARM64R11-ON:
	# work around malloc detection issue
	${REINPLACE_CMD} -e 's/#undef HAVE_ALIGNED_ALLOC/#define HAVE_ALIGNED_ALLOC 1/' \
		${WRKSRC}/libstdc++-v3/config.h.in

post-patch-FI386R12-ON:
	# work around malloc detection issue
	${REINPLACE_CMD} -e 's/#undef HAVE_ALIGNED_ALLOC/#define HAVE_ALIGNED_ALLOC 1/' \
		${WRKSRC}/libstdc++-v3/config.h.in

post-patch-FAMD64R12-ON:
	# work around malloc detection issue
	${REINPLACE_CMD} -e 's/#undef HAVE_ALIGNED_ALLOC/#define HAVE_ALIGNED_ALLOC 1/' \
		${WRKSRC}/libstdc++-v3/config.h.in

post-patch-OMNIOS-ON:
	${REINPLACE_CMD} -e 's| install-gcc-specs||' \
		${WRKSRC}/gcc/ada/gcc-interface/Makefile.in
	# undo BSD thin socket modification
	${MV} ${WRKSRC}/gcc/ada/libgnat/g-socthi.ads.orig \
		${WRKSRC}/gcc/ada/libgnat/g-socthi.ads

do-install:
	# Buggy makefile; seems to have forgotten this is a cross compiler
	# Manually rename products so it doesn't rebuild them with new name
.for X in gnat gnatbind gnatchop gnatclean gnatkr gnatlink gnatls gnatmake gnatprep
	if [ ! -f "${BUILD_WRKSRC}/gcc/${X}" ]; then \
	   ${CP} -a ${BUILD_WRKSRC}/gcc/${X}-cross ${BUILD_WRKSRC}/gcc/${X}; \
	fi
.endfor
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV:C/^PATH=/&${PREFIX}\/bin:/} \
		${MAKE_CMD} install-strip DESTDIR=${STAGEDIR})
	${MV} ${STAGEDIR}${PREFIX}/bin/ada \
		${STAGEDIR}${PREFIX}/bin/${XCCTARGET}-ada

post-install-FARM64R11-ON:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${XCCTARGET}/${GCC_VERSION}/include-fixed/

post-install-FI386R12-ON:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${XCCTARGET}/${GCC_VERSION}/include-fixed/

post-install-FAMD64R12-ON:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${XCCTARGET}/${GCC_VERSION}/include-fixed/

post-stage:
	${RM} -r ${STAGEDIR}${MANPREFIX}
.for loop in A B
	(cd ${STAGEDIR}${PREFIX}; ${FIND} * -type d -empty | \
		${SORT} -dr | ${XARGS} ${RMDIR})
.endfor
	(cd ${STAGEDIR}${PREFIX}; \
		${FIND} * \( -type f -or -type l \) | ${SORT} | \
		${SED} -e '/^bin\//d' -e '/^${XCCTARGET}\/bin\//d' \
		>> ${WRKDIR}/.manifest.single.mktmp)
