DEF[PORTVERSION]=	6.1
DEF[WIDEC_WRKSRC]=	{{WRKSRC}}/build.widec
DEF[NOWIDEC_WRKSRC]=	{{WRKSRC}}/build.nowidec
DEF[NOWIDEC_EXAMDIR]=	{{PREFIX}}/share/examples/ncurses/nowidec
DEF[DOCS]=		ANNOUNCE NEWS README doc/html/announce.html doc/hackguide.doc doc/html/hackguide.html doc/html/index.html doc/ncurses-intro.doc doc/html/ncurses-intro.html
DEF[EXAMPLES]=		Makefile README blue.c bs.6 bs.c cardfile.c cardfile.dat ditto.c dots.c filter.c firework.c firstlast.c gdc.6 gdc.c hanoi.c hashtest.c knight.c lrtest.c ncurses.c newdemo.c railroad.c rain.c tclock.c test.priv.h testaddch.c testcurs.c testscanw.c view.c worm.c xmas.c
DEF[EXAMPLES_CPP]=	Makefile NEWS PROBLEMS README-first cursesapp.cc cursesapp.h cursesf.cc cursesf.h cursesm.cc cursesm.h cursesmain.cc cursesp.cc cursesp.h cursesw.cc cursesw.h cursslk.cc cursslk.h demo.cc etip.h internal.h
# ----------------------------------------------------------------------------

NAMEBASE=		ncurses
VERSION=		${PORTVERSION}
REVISION=		3
KEYWORDS=		devel
VARIANTS=		standard static
SDESC[standard]=	Terminal-independent lib for full-screen output
SDESC[static]=		Minimal static-only version of ncurses
HOMEPAGE=		https://invisible-island.net/ncurses/ncurses.html
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://invisible-mirror.net/archives/ncurses/
			ftp://invisible-island.net/ncurses/
DISTFILE[1]=		ncurses-${PORTVERSION}.tar.gz:main

SPKGS[standard]=	complete primary examples docs
SPKGS[static]=		primary

OPTIONS_AVAILABLE=	STATIC
OPTIONS_STANDARD=	none
VOPTS[static]=		STATIC=ON

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		solo

# FreeBSD uses development snapshot now, so version comparison is useless
# FPC_EQUIVALENT=		devel/ncurses

USES=			bdb:static pkgconfig terminfo:primary shebangfix
SHEBANG_FILES=		test/tracemunch

MUST_CONFIGURE=		gnu
SINGLE_JOB=		yes
INSTALL_REQ_TOOLCHAIN=	yes
CONFIGURE_WRKSRC=	${NOWIDEC_WRKSRC}
CONFIGURE_SCRIPT=	../configure
CONFIGURE_ARGS=		--datadir={{PREFIX}}/share/misc
			--disable-overwrite
			--disable-termcap
			--enable-bsdpad
			--enable-getcap
			--enable-colorfgbg
			--disable-home-terminfo
			--with-pkg-config=yes
			--enable-pc-files
			--with-termlib
			--program-prefix=
			--enable-rpath
			--disable-root-environ
			--with-manpage-format=gzip
			--srcdir=../
			--without-debug
			--without-manpage-renames
			--without-ada
			--mandir={{MANPREFIX}}/man
			--with-hashed-db=db5
			--with-shlib-version=rel
			--datadir={{PREFIX}}/share/misc
			--with-default-terminfo-dir={{PREFIX}}/share/misc/terminfo
			--with-terminfo-dirs={{PREFIX}}/share/misc/terminfo:/usr/share/terminfo
CONFIGURE_ENV=		gnat_exists="no"
BUILD_WRKSRC=		${NOWIDEC_WRKSRC}
INSTALL_WRKSRC=		${NOWIDEC_WRKSRC}
CPPFLAGS=		-P
PLIST_SUB=		ABI_VER=${PORTVERSION:R}
			REL_VER=${PORTVERSION}

VAR_OPSYS[sunos]=	CONFIGURE_ENV=LIBS="-lrt -lresolv -lsocket"

[STATIC].CONFIGURE_ARGS_ON=		--enable-shared=no
[STATIC].CONFIGURE_ARGS_OFF=		--with-shared=yes

post-extract:
	@${MKDIR} ${WIDEC_WRKSRC}
	@${MKDIR} ${NOWIDEC_WRKSRC}

post-patch:
	${REINPLACE_CMD} -e 's,$$(INSTALL_PROG) ncurses-config,@INSTALL_SCRIPT@ ncurses-config,' ${WRKSRC}/misc/Makefile.in
	${REINPLACE_CMD} -e 's,/usr/include,${PREFIX}/include,g' ${WRKSRC}/misc/ncurses-config.in

post-patch-freebsd:
	# static libdb requires post-linking with pthread library
	${REINPLACE_CMD} -e 's|(LIBS_TIC)|(LIBS_TIC) -lpthread|' \
		-e 's|(LIBS_TINFO)|(LIBS_TINFO) -lpthread|' \
		${WRKSRC}/progs/Makefile.in
	${REINPLACE_CMD} -e 's|(MATH_LIB)|(MATH_LIB) -lpthread|' \
		${WRKSRC}/test/Makefile.in
	${REINPLACE_CMD} -e 's|(TEST_LDFLAGS)|(TEST_LDFLAGS) -lpthread|' \
		${WRKSRC}/c++/Makefile.in

post-configure:
	cd ${.CURDIR} && \
	    ${SET_LATE_CONFIGURE_ARGS} \
	    ${MAKE} ${.MAKEFLAGS} CONFIGURE_WRKSRC=${WIDEC_WRKSRC} \
	    CONFIGURE_ARGS="${CONFIGURE_ARGS} --enable-widec" \
	    do-configure
.for d in test c++
	${CP} -R ${WRKSRC}/${d}/* ${WIDEC_WRKSRC}/${d}/
	${CP} -R ${WRKSRC}/${d}/* ${NOWIDEC_WRKSRC}/${d}/
.endfor

post-build:
	(cd ${.CURDIR} && ${MAKE} ${.MAKEFLAGS} \
		BUILD_WRKSRC=${WIDEC_WRKSRC} do-build)

	# Shift post-install to post-build.   The installation uses the
	# compiler even there.
	(cd ${.CURDIR} && ${MAKE} ${.MAKEFLAGS} \
		INSTALL_WRKSRC=${WIDEC_WRKSRC} do-install)
	# Remove -ldb-5 from pc files.  It's been statically linked in

post-install-STATIC-ON:
	${MV} ${STAGEDIR}${PREFIX}/share/misc/terminfo.db \
		${STAGEDIR}${PREFIX}/share/misc/terminfo.db.default
	${RM} -r ${STAGEDIR}${MANPREFIX}/man

post-install-STATIC-OFF:
	# It's probably time to remove this GNU ld linker-specific hack
.if "${.MAKE.OS.NAME}" != "SunOS" && "${.MAKE.OS.NAME}" != "Darwin"
	${RM} ${STAGEDIR}${PREFIX}/lib/libncurses.${LIBEXT}
	${RM} ${STAGEDIR}${PREFIX}/lib/libncursesw.${LIBEXT}
	${ECHO} "INPUT(libncurses.so.${PORTVERSION:R} AS_NEEDED(-ltinfo))" \
		> ${STAGEDIR}${PREFIX}/lib/libncurses.${LIBEXT}
	${ECHO} "INPUT(libncursesw.so.${PORTVERSION:R} AS_NEEDED(-ltinfow))" \
		> ${STAGEDIR}${PREFIX}/lib/libncursesw.${LIBEXT}
.else
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.${LIBEXT}
.endif
	${MV} ${STAGEDIR}${PREFIX}/share/misc/terminfo.db \
		${STAGEDIR}${PREFIX}/share/misc/terminfo.db.default

	@${MKDIR} ${STAGEDIR}${NOWIDEC_EXAMDIR}/c++
.for f in ${EXAMPLES}
	${INSTALL_DATA} ${NOWIDEC_WRKSRC}/test/${f} \
		${STAGEDIR}${NOWIDEC_EXAMDIR}/
.endfor
.for f in ${EXAMPLES_CPP}
	${INSTALL_DATA} ${NOWIDEC_WRKSRC}/c++/${f} \
		${STAGEDIR}${NOWIDEC_EXAMDIR}/c++/
.endfor
	@${MKDIR} ${STAGEDIR}${STD_DOCDIR}
.for f in ${DOCS}
	${INSTALL_DATA} ${WRKSRC}/${f} ${STAGEDIR}${STD_DOCDIR}/
.endfor

post-stage:
	${SED} -i'' -e 's|-ldb-5||' -e 's|-Wl,.*/db5||' \
		${STAGEDIR}${PREFIX}/lib/pkgconfig/*.pc \
		${STAGEDIR}${PREFIX}/bin/ncurse*-config
