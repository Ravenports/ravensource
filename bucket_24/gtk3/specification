DEF[PORTVERSION]=	EXTRACT_INFO(GTK3_PORT_VERSION)
DEF[LIBVERSION]=	0.2404.32
DEF[GTK_VERSION]=	EXTRACT_INFO(GTK3_VERSION)
# ----------------------------------------------------------------------------

NAMEBASE=		gtk3
VERSION=		${PORTVERSION}
KEYWORDS=		x11_toolkits
VARIANTS=		standard
SDESC[standard]=	Gimp Toolkit for X11 GUI
HOMEPAGE=		https://www.gtk.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNOME/gtk+/${PORTVERSION:R}
DISTFILE[1]=		gtk+-${PORTVERSION}.tar.xz:main
DIST_SUBDIR=		gnome3

SPKGS[standard]=	complete primary nls icon_cache

OPTIONS_AVAILABLE=	DBUS CUPS CLOUDPRINT COLORD BROADWAY INTROSPECTION
OPTIONS_STANDARD=	DBUS BROADWAY INTROSPECTION
OPT_ON[all]=		DBUS BROADWAY INTROSPECTION

FPC_EQUIVALENT=		x11-toolkits/gtk30

BUILD_DEPENDS=		harfbuzz:dev:standard
BUILDRUN_DEPENDS=	libepoxy:single:standard

EXRUN[primary]=		gtk3:icon_cache:standard
EXRUN[icon_cache]=	gdk-pixbuf:primary:standard

USES=			gettext-tools pkgconfig meson
			schemas:primary perl:build python:build cpe
GNOME_COMPONENTS=	atk cairo gdkpixbuf pango
XORG_COMPONENTS=	xext x11 xinerama xi xrandr xcursor xfixes
			xdamage xcomposite
CPE_VENDOR=		gtk
CPE_PRODUCT=		gtk\+
MESON_ARGS=		-Dx11_backend=true
			-Dwayland_backend=false
			-Dtests=false
			-Dexamples=false
CPPFLAGS=		-fno-omit-frame-pointer
PLIST_SUB=		LIBVERSION=${LIBVERSION}
			GTK_VERSION=${GTK_VERSION}
DISTNAME=		gtk+-${PORTVERSION}

GLIB_SCHEMAS=		org.gtk.Demo.gschema.xml
			org.gtk.Settings.ColorChooser.gschema.xml
			org.gtk.Settings.Debug.gschema.xml
			org.gtk.Settings.FileChooser.gschema.xml

VAR_OPSYS[sunos]=	LDFLAGS=-lsocket
			LDFLAGS=-lintl
			CPPFLAGS=-DO_CLOEXEC=0

[DBUS].DESCRIPTION=			AT-SPI ATK bridge support (requires dbus)
[BROADWAY].DESCRIPTION=			Backend for HTML5 and websocket support
[CLOUDPRINT].DESCRIPTION=		Support for printing to cloud
[INTROSPECTION].DESCRIPTION=		Build with introspection files

[DBUS].BUILDRUN_DEPENDS_ON=		at-spi2-atk:single:standard

[CUPS].BROKEN_ON=			CUPS option not supported yet
[CLOUDPRINT].BROKEN_ON=			CLOUDPRINT option not supported yet
[COLORD].BROKEN_ON=			COLORD option not supported yet

[CLOUDPRINT].CONFIGURE_ARGS_ON=		-Dcloudproviders=true
[CLOUDPRINT].BUILDRUN_DEPENDS_ON=	librest:single:standard
					json-glib:primary:standard

[CUPS].CONFIGURE_ARGS_ON=		-Dprint_backends=cups,file,lpr
[CUPS].CONFIGURE_ARGS_OFF=		-Dprint_backends=file,lpr
[CUPS].BUILDRUN_DEPENDS_ON=		cups:single:standard

[BROADWAY].CONFIGURE_ARGS_ON=		-Dbroadway_backend=true

[INTROSPECTION].CONFIGURE_ARGS_OFF=	-Dintrospection=false
[INTROSPECTION].GNOME_COMPONENTS_ON=	introspection

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/lib/gtk-3.0/modules
	${MKDIR} ${STAGEDIR}${PREFIX}/lib/gtk-3.0/${GTK_VERSION}/engines
	${MKDIR} ${STAGEDIR}${PREFIX}/lib/gtk-3.0/${GTK_VERSION}/loaders
	# add icon-update instructions to manifest
	@splist="${WRKDIR}/.manifest.primary.mktmp"; \
	for i in `${GREP} "^share/icons/.*/" $${splist} | ${CUT} -d / -f 1-3 | ${SORT} -u`; \
	do \
	  echo "@rmtry $${i}/icon-theme.cache" >> $${splist}.icons1; \
	  echo "@postexec ${LOCALBASE}/bin/gtk-update-icon-cache -q -f %D/$${i} 2>/dev/null || true"   >> $${splist}; \
	  echo "@postunexec ${LOCALBASE}/bin/gtk-update-icon-cache -q -f %D/$${i} 2>/dev/null || true" >> $${splist}; \
	  echo "Added $${i} icon directory processing to primary manifest"; \
	done; \
	${CAT} $${splist}.icons1 >> $${splist}
