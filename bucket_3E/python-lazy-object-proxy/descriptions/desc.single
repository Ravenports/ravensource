========
Overview
========

A fast and thorough lazy object proxy.

* Free software: BSD 2-Clause License

Note that this is based on `wrapt`_'s ObjectProxy with one big change: it
calls a function the first time the proxy object is
used, while `wrapt.ObjectProxy` just forwards the method calls to the
target object.

In other words, you use `lazy-object-proxy` when you only have the object
way later and you use `wrapt.ObjectProxy` when you
want to override few methods (by subclassing) and forward everything else
to the target object.

Example::

    import lazy_object_proxy

    def expensive_func():
        from time import sleep
        print('starting calculation')
        # just as example for a very slow computation
        sleep(2)
        print('finished calculation')
        # return the result of the calculation
        return 10

    obj = lazy_object_proxy.Proxy(expensive_func)
    # function is called only when object is actually used
    print(obj)  # now expensive_func is called

    print(obj)  # the result without calling the expensive_func

Installation
============

::

    pip install lazy-object-proxy

You can also install the in-development version with::

    pip install
https://github.com/ionelmc/python-lazy-object-proxy/archive/master.zip

Documentation
=============

https://python-lazy-object-proxy.readthedocs.io/

Development
===========

To run all the tests run::

    tox

Acknowledgements
================

This project is based on some code from `wrapt`_ as you can see in the git
history.

.. _wrapt: https://github.com/GrahamDumpleton/wrapt

Changelog
=========

1.11.0 (2025-04-16)
-------------------

* Added Python 3.13 wheels.
* Added support for __format__.
* Dropped support for Python 3.8.

1.10.0 (2023-12-15)
-------------------

* Added Python 3.12 wheels.
* Dropped support for Python 3.7.
* Applied some reformatting and lint fixes using ruff to the codebase
(mostly more Python 2 leftover cleanups).

1.9.0 (2023-01-04)
------------------

* Added support for matrix multiplication operator (``@``).
* Should have all the wheels now (including the manylinux ones).
* Bumped minimum version requirements for setuptools and setuptools-scm.
* Switched the default pure python fallback implementation to the "simple"
one (when you from lazy_object_proxy import Proxy
  and the C extension is not available).
  Previously the "slots" implementation was used but as it turns out it is
slower on Python 3.

1.8.0 (2022-10-26)
