DEF[PORTVERSION]=	2.5.9
# ----------------------------------------------------------------------------

NAMEBASE=		sbcl
VERSION=		${PORTVERSION}
KEYWORDS=		lang
VARIANTS=		std
SDESC[std]=		Steel Bank Common Lisp
HOMEPAGE=		http://www.sbcl.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main boot ravdist
SITES[main]=		SF/sbcl/sbcl/${PORTVERSION}
SITES[ravdist]=		https://leaf.dragonflybsd.org/~marino/raven-distfiles/sbcl/
DISTFILE[1]=		sbcl-${PORTVERSION}-source.tar.bz2:main
DISTFILE[2]=		bootstrap-sbcl-2.4.4-dragonfly-x86_64.tzst:ravdist
DISTFILE[3]=		bootstrap-sbcl-2.4.4-Linux-amd64.tzst:ravdist
DISTFILE[4]=		bootstrap-sbcl-2.4.4-MidnightBSD-amd64.tzst:ravdist
DISTFILE[5]=		bootstrap-sbcl-2.4.4-NetBSD-amd64.tzst:ravdist
DISTFILE[6]=		bootstrap-sbcl-2.4.4-FreeBSD-amd64.tzst:ravdist
DF_INDEX=		1

SPKGS[std]=		set primary man

OPTIONS_AVAILABLE=	DRAGONFLY FREEBSD LINUX SUNOS NETBSD MIDNIGHT MACOS CONCURRENCY SIMD CLISP
OPTIONS_STANDARD=	DRAGONFLY FREEBSD LINUX SUNOS NETBSD MIDNIGHT MACOS CONCURRENCY SIMD CLISP
OPTGROUP_RADIO=		SYSTEM
OPTDESCR[SYSTEM]=	Operating System
OPTGROUP[SYSTEM]=	DRAGONFLY FREEBSD LINUX SUNOS MACOS NETBSD MIDNIGHT
OPT_ON[dragonfly]=	DRAGONFLY
OPT_ON[freebsd]=	FREEBSD CONCURRENCY
OPT_ON[linux]=		LINUX CONCURRENCY
OPT_ON[sunos]=		SUNOS CLISP
OPT_ON[darwin]=		MACOS CLISP
OPT_ON[netbsd]=		NETBSD
OPT_ON[midnightbsd]=	MIDNIGHT CONCURRENCY

LICENSE=		PUBDOM:primary
			BSD3CLAUSE:primary
			MIT:primary
LICENSE_FILE=		PUBDOM:{{WRKDIR}}/LICENSE_PUBDOM
			BSD3CLAUSE:{{WRKDIR}}/LICENSE_BSD
			MIT:{{FILESDIR}}/city.cc.license
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_AWK=		TERMS:"^===="
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/COPYING
LICENSE_SCHEME=		multi

FPC_EQUIVALENT=		lang/sbcl

NOT_FOR_OPSYS=		darwin

RUN_DEPENDS=		asdf:primary:std
BUILD_DEPENDS=		gmp:dev:std
			mpfr:dev:std
BUILDRUN_DEPENDS=	gmp:primary:std
			mpfr:primary:std

USES=			gmake makeinfo zlib zstd
SUB_FILES=		sbclrc
CMAKE_ARGS=		--prefix="{{PREFIX}}"
			--without-sb-thread
			--with-sb-unicode
			--with-sb-core-compression
			--without-sb-xref-for-internals
			--without-sb-safepoint

VAR_OPSYS[netbsd]=	MAKE_ENV=SBCL_PAXCTL="{{PAXCTL}} +m"

# CMAKE_ARGS were repurposed
# On DragonFly, the self-tests fail on concurrency module, so disable
# threading by default on this platform

[DRAGONFLY].DESCRIPTION=		Build for DragonFly BSD
[FREEBSD].DESCRIPTION=			Build for FreeBSD
[LINUX].DESCRIPTION=			Build for Linux
[SUNOS].DESCRIPTION=			Build for Solaris
[MACOS].DESCRIPTION=			Build for MacOS
[NETBSD].DESCRIPTION=			Build for NetBSD
[MIDNIGHT].DESCRIPTION=			Build for MidnightBSD
[CONCURRENCY].DESCRIPTION=		Enable thread support
[SIMD].DESCRIPTION=			Enable SB-SIMD (requires AVX2 CPU)
[CLISP].DESCRIPTION=			Bootstrap SBCL with Clisp

[CONCURRENCY].CMAKE_ARGS_OFF=		--without-sb-thread
[CONCURRENCY].CMAKE_ARGS_ON=		--with-sb-thread

[SIMD].CMAKE_ARGS_ON=			--with-sb-simd
[SIMD].CMAKE_ARGS_OFF=			--without-sb-simd

[CLISP].BUILD_DEPENDS_ON=		clisp:primary:std
[CLISP].CMAKE_ARGS_ON=			--xc-host=clisp
[CLISP].CMAKE_ARGS_OFF=			--xc-host={{WRKDIR}}/bootstrap/bin/sbcl

[DRAGONFLY].DF_INDEX_ON=		2
[LINUX].DF_INDEX_ON=			3
[MIDNIGHT].DF_INDEX_ON=			4
[NETBSD].DF_INDEX_ON=			5
[FREEBSD].DF_INDEX_ON=			6

post-extract:
	# Extract licenses into separate files
	${AWK} '/^;;;; Portions of LOOP/,/;;;; specification/' \
		${WRKSRC}/COPYING > ${WRKDIR}/LICENSE_PUBDOM
	${AWK} '/gerd\.moellmann/,/;;; DAMAGE/' \
		${WRKSRC}/COPYING > ${WRKDIR}/LICENSE_BSD

post-patch:
	# Rename installed file sbcl.core as sbcl_core
	${GREP} -Frl 'sbcl.core' ${WRKSRC} | ${XARGS} ${REINPLACE_CMD} -e 's|sbcl\.core|sbcl_core|g'
	# fix paths
	${REINPLACE_CMD} -e 's|/etc|${PREFIX}/etc|' \
		${WRKSRC}/src/code/toplevel.lisp \
		${WRKSRC}/doc/sbcl.1 \
		${WRKSRC}/doc/manual/start-stop.texinfo

pre-build-netbsd:
	# increase datasize limits on NetBSD
	ulimit -d 2097152 && ulimit -a

pre-build-midnightbsd:
	# MidnightBSD 3.0 code originates from FreeBSD before the addition of ASLR
	${REINPLACE_CMD} '/PAXCTL/d' ${WRKSRC}/src/runtime/Config.x86-64-freebsd

do-build:
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} ${SH} make.sh ${CMAKE_ARGS} || ${TRUE})

do-install:
	(cd ${WRKSRC} && ${SETENV} \
	INSTALL_ROOT="${STAGEDIR}${PREFIX}" \
	MAN_DIR="${STAGEDIR}${MANPREFIX}/man" \
	INFO_DIR="${STAGEDIR}${PREFIX}/${INFO_PATH}" \
	DOC_DIR="${STAGEDIR}${STD_DOCDIR}" \
	${SH} install.sh)
.for M in asdf sb-aclrepl sb-bsd-sockets sb-cltl2 sb-concurrency sb-cover \
	sb-executable sb-gmp sb-grovel sb-introspect sb-md5 sb-mpfr sb-posix \
	sb-queue sb-rotate-byte sb-rt sb-simple-streams sb-sprof
	${MKDIR} ${STAGEDIR}${PREFIX}/lib/sbcl/${M}
	${INSTALL_DATA} ${WRKSRC}/contrib/${M}/*.[la]* \
		${STAGEDIR}${PREFIX}/lib/sbcl/${M}/
.endfor
	${INSTALL_DATA} ${WRKDIR}/sbclrc \
		${STAGEDIR}${PREFIX}/etc/sbclrc.sample
	# build documentation
	${DO_MAKE_BUILD} -C ${WRKSRC}/doc/manual info html

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/sbcl
	${RM} ${STAGEDIR}${PREFIX}/${INFO_PATH}/dir
	${RM} -rf ${STAGEDIR}${STD_DOCDIR}

post-install-SIMD-ON:
	${MKDIR} ${STAGEDIR}${PREFIX}/lib/sbcl/sb-simd
	${INSTALL_DATA} ${WRKSRC}/contrib/sb-simd/code/*.[la]* \
		${STAGEDIR}${PREFIX}/lib/sbcl/sb-simd/
