DEF[PORTVERSION]=	4.0.3
DEF[SOVERSION]=		16.0.3
DEF[SO_WIRETAP]=	13.0.3
DEF[SO_WSUTIL]=		14.0.0
DEF[PLUGIN_VER]=	${PORTVERSION:R}
# ----------------------------------------------------------------------------

NAMEBASE=		wireshark
VERSION=		${PORTVERSION}
REVISION=		1
KEYWORDS=		net
VARIANTS=		standard
SDESC[standard]=	Network traffic analyzer
HOMEPAGE=		https://www.wireshark.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://2.na.dl.wireshark.org/src/all-versions/
			https://www.wireshark.org/download/src/
DISTFILE[1]=		wireshark-${PORTVERSION}.tar.xz:main

SPKGS[standard]=	complete primary docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		GPLv2+:primary
			BSD3CLAUSE:primary
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_FILE=		GPLv2+:{{WRKDIR}}/GPL2
			BSD3CLAUSE:{{WRKDIR}}/BSD_LICENSE
LICENSE_SCHEME=		dual

FPC_EQUIVALENT=		net/wireshark

BUILD_DEPENDS=		bison:primary:standard
			c-ares:dev:standard
			doxygen:single:standard
			gnutls:dev:standard
			libgpg-error:dev:standard
			libnghttp2:dev:standard
			qt5-qttools:single:standard
			ruby-asciidoctor:single:ruby_default
BUILDRUN_DEPENDS=	libgpg-error:primary:standard
			libgcrypt:single:standard
			libnghttp2:primary:standard
			c-ares:primary:standard
			gnutls:primary:standard
			libpcap:single:standard
			libssh:single:standard
			libsmi:library:standard
			krb5:primary:standard
			snappy:single:standard
			qt5-qtmultimedia:single:standard
			qt5-qtsvg:single:standard
			libmaxminddb:single:standard
			brotli:single:standard
			speexdsp:primary:standard

# worked with libressl 2.7.x, but seeing floating point exception
# (core dump) with libressl 2.8.x
USES=			cpe gmake cmake ssl:openssl11 zlib lz4 qt5
			zstd lua:5.2 perl:build pkgconfig
			mime-info:primary
			desktop-utils:primary
GNOME_COMPONENTS=	glib libxml2
CMAKE_ARGS=		-DBUILD_wireshark:BOOL=ON
			-DBUILD_tshark:BOOL=ON
			-DBUILD_tfshark:BOOL=OFF
			-DBUILD_rawshark:BOOL=ON
			-DBUILD_androiddump:BOOL=ON
			-DBUILD_sshdump:BOOL=ON
			-DBUILD_ciscodump:BOOL=ON
			-DENABLE_ZLIB:BOOL=ON
			-DENABLE_LZ4:BOOL=ON
			-DENABLE_SNAPPY:BOOL=ON
			-DENABLE_NGHTTP2:BOOL=ON
			-DENABLE_LUA:BOOL=ON
			-DENABLE_SMI:BOOL=ON
			-DENABLE_GNUTLS:BOOL=ON
			-DENABLE_CAP:BOOL=ON
			-DENABLE_CARES:BOOL=ON
			-DENABLE_KERBEROS:BOOL=ON
			-DENABLE_SBC:BOOL=OFF
			-DENABLE_SPANDSP:BOOL=OFF
			-DENABLE_BCG729:BOOL=OFF
			-DENABLE_CAP:BOOL=OFF
			-DCMAKE_PREFIX_PATH:PATH="{{PREFIX}}/lib/qt5/cmake/"
			-DLUA_INCLUDEDIR:PATH="{{LUA_INCDIR}}"
			-DLUA_LIBDIR:PATH="{{LUA_LIBDIR}}"
INSTALL_REQ_TOOLCHAIN=	yes
CPPFLAGS=		-I{{LUA_INCDIR}}
SOVERSION=		${SOVERSION}
PLIST_SUB=		SO_WIRETAP=${SO_WIRETAP}
			SO_WSUTIL=${SO_WSUTIL}
			MAJ_WIRETAP=${SO_WIRETAP:R:R}
			MAJ_WSUTIL=${SO_WSUTIL:R:R}
			PLUGIN_VER=${PLUGIN_VER}

# USES=cmake + qt5 don't play nice together wrt DESTDIR
# manually set until a framework fix is found
MAKE_ARGS=		DESTDIR={{STAGEDIR}}

post-extract:
	${AWK} '/^Part I:$$/,/^The full text of the GNU GPL/' \
		${WRKSRC}/COPYING > ${WRKDIR}/TERMS
	${AWK} '/^Part II:$$/,/^Public License instead of this License./' \
		${WRKSRC}/COPYING > ${WRKDIR}/GPL2
	${AWK} '/^Part III:$$/,/^---------------/' \
		${WRKSRC}/COPYING > ${WRKDIR}/BSD_LICENSE

post-patch:
	${REINPLACE_CMD} -e '/NAMES lua/ s|lua52|lua-${LUA_VER}|' \
		${WRKSRC}/cmake/modules/FindLUA.cmake
	${REINPLACE_CMD} -e 's|libssh/libssh.h|libssh/libssh_version.h|' \
		${WRKSRC}/cmake/modules/FindLIBSSH.cmake

post-install:
	${MKDIR} ${STAGEDIR}${STD_DOCDIR}
	${MV} ${STAGEDIR}${PREFIX}/share/wireshark/*.html \
		${STAGEDIR}${STD_DOCDIR}/
	${MV} ${STAGEDIR}${PREFIX}/share/wireshark/AUTHORS-SHORT \
		${STAGEDIR}${STD_DOCDIR}/
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/wireshark/extcap/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/wireshark/plugins/${PLUGIN_VER}/*/*.so
	${RM} ${STAGEDIR}${PREFIX}/share/wireshark/COPYING
