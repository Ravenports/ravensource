DEF[PORTVERSION]=	138.0.3
DEF[FOXVERSION]=	${PORTVERSION}
DEF[MBSD64_TARGET]=	EXTRACT_INFO(MIDNIGHT64_CC_TARGET)
DEF[CLANGBASE]=		clang
DEF[LLVMBASE]=		llvm
# ----------------------------------------------------------------------------

NAMEBASE=		firefox
VERSION=		${PORTVERSION}
KEYWORDS=		www
VARIANTS=		std
SDESC[std]=		Mozilla web browser
HOMEPAGE=		https://www.mozilla.org/en-US/firefox/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		MOZILLA/firefox/releases/${FOXVERSION}/source
DISTFILE[1]=		firefox-${FOXVERSION}.source.tar.xz:main

SPKGS[std]=		single

OPTIONS_AVAILABLE=	MOLD
OPTIONS_STANDARD=	MOLD
OPT_ON[linux]=		MOLD

# Unclear if mold linker is practically linux only still
# OPT_ON[netbsd]=		MOLD
# OPT_ON[freebsd]=	MOLD
# OPT_ON[dragonfly]=	MOLD
# OPT_ON[midnightbsd]=	MOLD

LICENSE=		MPL:single
LICENSE_FILE=		MPL:stock
LICENSE_TERMS=		single:{{WRKSRC}}/toolkit/content/license.html
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		www/firefox

BUILD_DEPENDS=		autoconf213:single:std
			cbindgen:single:std
			${CLANGBASE}:set:std
			dav1d:dev:std
			evdev-proto:single:std
			ffmpeg:dev:std
			harfbuzz:dev:std
			icu:dev:std
			libcanberra:dev:std
			libevent:dev:std
			libnotify:dev:std
			libproxy:dev:std
			${LLVMBASE}:tools:std
			nasm:primary:std
			nodejs:primary:std
			nss:dev:std
			pciutils:dev:std
			rust:single:std
# #			sccache:primary:std
			yasm:primary:std
			zip:primary:std
BUILDRUN_DEPENDS=	dav1d:primary:std
			dbus-glib:primary:std
			ffmpeg:primary:std
			harfbuzz:primary:std
			icu:primary:std
			libcanberra:primary:std
			libdrm:primary:std
			libevent:primary:std
			libffi:primary:std
			libnotify:primary:std
			libproxy:primary:std
			nss:primary:std
			pciutils:primary:std
RUN_DEPENDS=		icu:data:std

B_DEPS[linux]=		alsa-lib:dev:std
			sndio:dev:std
BR_DEPS[linux]=		sndio:primary:std
			alsa-lib:primary:std
B_DEPS[netbsd]=		sndio:dev:std
BR_DEPS[netbsd]=	sndio:primary:std

USES=			cpe desktop-utils:single gmake jpeg perl:build
			pkgconfig png python:build,sqlite zlib
XORG_COMPONENTS=	pixman xcb ice sm
GNOME_COMPONENTS=	gdkpixbuf gtk3
CPE_VENDOR=		mozilla
MUST_CONFIGURE=		yes
CONFIGURE_OUTSOURCE=	yes
QMAKE_ARGS=		--enable-application=browser
			--enable-chrome-format=omni
			--enable-default-toolkit=cairo-gtk3
			--enable-install-strip
			--enable-official-branding
			--enable-optimize
			--enable-release
			--enable-strip
			--enable-libproxy
			--enable-system-ffi
			--enable-system-pixman
			--disable-alsa
			--disable-debug
			--disable-debug-symbols
			--disable-dtrace
			--disable-jack
			--disable-profiling
			--disable-pulseaudio
			--disable-tests
			--disable-updater
			--disable-webrtc
			--disable-hardening
			--prefix="{{PREFIX}}"
			--with-intl-api
			--with-system-icu
			--with-system-jpeg
			--with-system-libevent
			--with-system-nspr
			--with-system-nss
			--with-system-png
			--with-system-zlib
			--without-wasm-sandboxed-libraries
CONFIGURE_ENV=		PYTHON3={{PYTHON_CMD}}
			SETUPTOOLS_USE_DISTUTILS=stdlib
# work around bindgen not finding ICU, e.g.
# dist/include/mozilla/intl/ICU4CGlue.h:8:10:
# fatal error: 'unicode/uenum.h' file not found, err: true
			BINDGEN_CFLAGS="-I{{LOCALBASE}}/include"
MAKE_ENV=		PYTHON3={{PYTHON_CMD}}
			CXXSTDLIB="stdc++"
MOUNT_PROCFS=		yes

VAR_OPSYS[linux]=	QMAKE_ARGS=--disable-elf-hack
			QMAKE_ARGS=--enable-audio-backends=sndio
			CONFIGURE_ENV=PKG_CONFIG_LIBDIR={{LOCALBASE}}/lib/pkgconfig
VAR_OPSYS[netbsd]=	QMAKE_ARGS=--enable-audio-backends=sndio
			MAKEFILE_LINE=MOZLDFLAGS=-lrt
VAR_OPSYS[midnightbsd]=	MAKEFILE_LINE=CONFIGURE_TARGET=${MBSD64_TARGET}

[MOLD].DESCRIPTION=			Link Firefox with MOLD rather than ports linker
[MOLD].BUILD_DEPENDS_ON=		mold:primary:std
[MOLD].QMAKE_ARGS_ON=			--enable-linker=mold

post-extract:
	${SED} -e 's|@FIREFOX_ICON@|firefox|;s|@MOZILLA@|firefox|' \
		< ${FILESDIR}/firefox.desktop.in \
		> ${WRKDIR}/firefox.desktop

post-patch:
	${REINPLACE_CMD} -e 's|%%LOCALBASE%%|${LOCALBASE}|g' \
		${WRKSRC}/browser/app/nsBrowserApp.cpp
	(cd ${WRKSRC}/gfx/angle/checkout/src/compiler/translator && \
		${REINPLACE_CMD} -e 's|<math.h>|<cmath>|' \
		InfoSink.h IntermNode.cpp)
	# disable SCTP
	${REINPLACE_CMD} -e 's|MOZ_SCTP|MOZ_DISABLE_SCTP|' \
		${WRKSRC}/netwerk/moz.build
	# disable rust checksums
	${REINPLACE_CMD} -e 's/"files":{[^}]*}/"files":{}/' \
		${WRKSRC}/third_party/rust/mtu/.cargo-checksum.json \
		${WRKSRC}/third_party/rust/quinn-udp/.cargo-checksum.json
	# Fix midnight
	${REINPLACE_CMD} -e "s|%%MBSD64_TGT%%|${MBSD64_TARGET}|" \
		${WRKSRC}/build/autoconf/config.guess
	# Set mozilla options
	@${ECHO_CMD} "--=> Setting configuration <=--"
	@for arg in ${QMAKE_ARGS}; do \
		${ECHO_CMD} ".mozconfig <<  $$arg" ;\
		${ECHO_CMD} ac_add_options $$arg >> ${WRKSRC}/.mozconfig ;\
	done
	@${ECHO_CMD} LDFLAGS=\"-lm ${MOZLDFLAGS} -Wl,-rpath,${PREFIX}/lib/firefox\" \
		>> ${WRKSRC}/.mozconfig

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/share/pixmaps \
		${STAGEDIR}${PREFIX}/share/applications
	${INSTALL_DATA} ${WRKDIR}/firefox.desktop \
		${STAGEDIR}${PREFIX}/share/applications/
	(cd ${STAGEDIR}${PREFIX}/share/pixmaps &&\
	${LN} -s ../../lib/firefox/browser/chrome/icons/default/default48.png firefox.png)
	# Rewrite symlink to make it relative instead of absolute
	(cd ${STAGEDIR}${PREFIX}/bin &&\
	${RM} firefox &&\
	${LN} -s ../lib/firefox/firefox firefox)
