DEF[PORTVERSION]=	0.14.1
DEF[GCC_VERSION]=	EXTRACT_INFO(GCCBASE_VERSION)
DEF[GCC_LIB]=		toolchain/ravensys-gcc/{{ASLIB}}
DEF[GCC_TARGET_LIB]=	toolchain/ravensys-gcc/lib/gcc/{{CONFIGURE_TARGET}}/${GCC_VERSION}
DEF[MBSD64_TARGET]=	EXTRACT_INFO(MIDNIGHT64_CC_TARGET)
DEF[LLVMBASE]=		llvm19
DEF[CLANGBASE]=		clang19
DEF[LLDBASE]=		lld19
# ----------------------------------------------------------------------------

NAMEBASE=		zig
VERSION=		${PORTVERSION}
KEYWORDS=		devel lang
VARIANTS=		std
SDESC[std]=		Programming language
HOMEPAGE=		https://ziglang.org/
CONTACT=		Tse_[tse@tse.gratis]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/ziglang:zig:${PORTVERSION}
DISTFILE[1]=		generated:main
SPKGS[std]=		single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		lang/zig

ONLY_FOR_OPSYS=		freebsd dragonfly netbsd linux midnightbsd

BROKEN[midnightbsd]=	error: UnknownOperatingSystem

BUILD_DEPENDS=		${CLANGBASE}:compiler:std
			${LLDBASE}:dev:std
			${LLDBASE}:primary:std
			${LLVMBASE}:tools:std
			${LLVMBASE}:dev:std
BUILDRUN_DEPENDS=	${CLANGBASE}:dynlibs:std

USES=			cmake ncurses execinfo zlib
GNOME_COMPONENTS=	libxml2
INSTALL_REQ_TOOLCHAIN=	yes

VAR_OPSYS[midnightbsd]=	MAKEFILE_LINE=CONFIGURE_TARGET=${MBSD64_TARGET}

pre-configure:
	${REINPLACE_CMD} \
		-e 's|@GCC_TARGET_LIBDIR@|${LOCALBASE}/${GCC_TARGET_LIB}|' \
		${WRKSRC}/lib/std/zig/LibCInstallation.zig
	${REINPLACE_CMD} \
		-e 's|@GCC_TARGET_LIBDIR@|${LOCALBASE}/${GCC_TARGET_LIB}|' \
		-e 's|@GCC_LIBDIR@|${LOCALBASE}/${GCC_LIB}|' \
		-e 's|@LOCALBASE@|${LOCALBASE}|' \
		${WRKSRC}/build.zig
	${REINPLACE_CMD} -e 's|/usr/local|${PREFIX}|g' \
		${WRKSRC}/cmake/Findclang.cmake \
		${WRKSRC}/cmake/Findllvm.cmake \
		${WRKSRC}/cmake/Findlld.cmake
	${FIND} ${WRKSRC} -name "*.orig" -delete

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/zig
	# remove empty directories
	${FIND} ${STAGEDIR}${PREFIX}/lib -type d -empty -delete
	# remove licenses out of place
	${RM} ${STAGEDIR}${PREFIX}/lib/zig/*/LICENSE.TXT
	${RM} ${STAGEDIR}${PREFIX}/lib/zig/libc/glibc/LICENSES
	# automatic plist for much of the manifest (influenced by clang)
	@(cd ${STAGEDIR}${PREFIX} && ${FIND} \
		lib/zig/compiler_rt \
		lib/zig/include \
		lib/zig/libc \
		lib/zig/libcxx \
		lib/zig/libcxxabi \
		lib/zig/std \
		lib/zig/tsan \
	\( -type f -o -type l \) 2>/dev/null | ${SORT}) \
	>> ${WRKDIR}/.manifest.single.mktmp
