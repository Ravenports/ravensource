DEF[ORIGVERSION]=	4.12.1
DEF[PORTVERSION]=	${ORIGVERSION}
DEF[CCLINKDIR]=		libexec/ccache
# Don't link "CC" because it is same as "cc" on case-insensitive file systems
# CC should not be used anyway as it is specific to Solaris
DEF[CC_COMPILERS]=	cc c++ gcc g++ clang clang++
DEF[FMT_VERSION]=	10.2.1
DEF[XXHASH_VERSION]=	0.8.3
# ----------------------------------------------------------------------------

NAMEBASE=		ccache
VERSION=		${PORTVERSION}
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Fast C/C++ compiler cache tool
HOMEPAGE=		https://ccache.samba.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main fmt
# xxhash
SITES[main]=		https://github.com/ccache/ccache/releases/download/v${PORTVERSION}/
# SITES[xxhash]=		https://github.com/Cyan4973/xxhash/archive/refs/tags/
DISTFILE[1]=		ccache-${PORTVERSION}.tar.xz:main
# DISTFILE[2]=		v${XXHASH_VERSION}.tar.gz:xxhash
DIST_SUBDIR=		ccache
# DF_INDEX=		1 2

SPKGS[std]=		set primary man docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		GPLv3+:primary
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/GPL-3.0.txt
LICENSE_TERMS=		primary:{{WRKSRC}}/LICENSE.adoc
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/ccache

BUILD_DEPENDS=		ruby-asciidoctor:single:ruby_default
			libblake3:dev:std
			xxhash:dev:std

EXTRACT_ONLY=		1

USES=			cmake perl:build c++:primary zstd:build
CMAKE_ARGS=		-DENABLE_TESTING:BOOL=OFF
			-DREDIS_STORAGE_BACKEND:BOOL=OFF
			-DDEP_FMT:STRING=BUNDLED
PLIST_SUB=		CCLINKDIR="${CCLINKDIR}"
DISTNAME=		ccache-${ORIGVERSION}
BUILD_TARGET=		all doc

VAR_OPSYS[sunos]=	LDFLAGS=-lsocket
			LDFLAGS=-lsendfile

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/${CCLINKDIR}
.for compiler in ${CC_COMPILERS}
	${LN} -sf ${PREFIX}/bin/ccache ${STAGEDIR}${PREFIX}/${CCLINKDIR}/${compiler}
.endfor

	${MKDIR} ${STAGEDIR}${STD_DOCDIR}
	${INSTALL_DATA} ${INSTALL_WRKSRC}/doc/MANUAL.html ${STAGEDIR}${STD_DOCDIR}
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/ccache
