DEF[PORTVERSION]=	EXTRACT_VERSION(PGSQL_15_VERSION)
DEF[NAMEBASE]=		postgresql15
DEF[SUFFIX]=		${PORTVERSION:R:S/.//}
DEF[PG_USER]=		pgsql
DEF[PG_GROUP]=		pgsql
DEF[PG_UID]=		60000
DEF[DATADIR]=		data${PORTVERSION:R}0
# ----------------------------------------------------------------------------

NAMEBASE=		${NAMEBASE}
VERSION=		${PORTVERSION}
KEYWORDS=		databases
VARIANTS=		std
SDESC[std]=		Powerful, open source object-relational database
HOMEPAGE=		https://www.postgresql.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		PGSQL/source/v${PORTVERSION}
DISTFILE[1]=		postgresql-${PORTVERSION}.tar.bz2:main
DIST_SUBDIR=		postgresql

SPKGS[std]=		set server client contrib plperl plpython pltcl docs nls man dev

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		PostgreSQL:server
LICENSE_FILE=		PostgreSQL:{{WRKSRC}}/COPYRIGHT
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		databases/${NAMEBASE}-server

BUILD_DEPENDS=		docbook-sgml:single:std
			docbook-dsssl:single:std
			openjade:primary:std
			readline:dev:std
			readline:primary:std
			libxslt:dev:std
BUILDRUN_DEPENDS=	libxslt:primary:std

B_DEPS[linux]=		ossp-uuid:dev:std
BR_DEPS[linux]=		ossp-uuid:primary:std

B_DEPS[sunos]=		ossp-uuid:dev:std
BR_DEPS[sunos]=		ossp-uuid:primary:std

B_DEPS[darwin]=		libuuid:dev:std
BR_DEPS[darwin]=	libuuid:primary:std

EXRUN[server]=		${NAMEBASE}:client:std
			icu:data:std
EXRUN[client]=		gettext:primary:std
			libxslt:primary:std
			readline:primary:std
			zlib:primary:std
			ssl
EXRUN[contrib]=		${NAMEBASE}:client:std
			libxslt:primary:std
			zlib:primary:std
			gettext:primary:std
			ssl
EXRUN[plpython]=	python
EXRUN[plperl]=		perl
EXRUN[pltcl]=		tcl

USERS=			${PG_USER}
GROUPS=			${PG_GROUP}
USERGROUP_SPKG=		server

USES=			bison gmake perl:build tcl:build ssl python:build zlib
			gettext cpe
GNOME_COMPONENTS=	libxml2
CPE_VENDOR=		postgresql
CPE_PRODUCT=		postgresql
DISTNAME=		postgresql-${PORTVERSION}
MUST_CONFIGURE=		gnu
CONFIGURE_ARGS=		--with-libraries="{{PREFIX}}/lib"
			--with-includes="{{PREFIX}}/include:{{TCL_INCLUDEDIR}}"
			--with-tclconfig="{{TCL_LIBDIR}}"
			--with-openssl
			--with-libxml
			--with-libxslt
			--with-perl
			--with-python
			--with-tcl
			--without-gssapi
			--enable-nls
CONFIGURE_ENV=		PTHREAD_LIBS="-lpthread"
			TCLSH="{{TCLSH}}"
			pgac_cv_path_stylesheets={{PREFIX}}/share/sgml/docbook/dsssl/modular
MAKE_ENV=		TCL_INCDIR="{{TCL_INCLUDEDIR}}"
BUILD_TARGET=		world
INSTALL_TARGET=		install-world
LDFLAGS=		-lpthread
RC_SUBR=		postgresql:server
PLIST_SUB=		PGVER=${PORTVERSION:R}
SUB_FILES=		502.pgsql
SUB_LIST=		PG_GROUP=${PG_GROUP}
			PG_USER=${PG_USER}
			PG_UID=${PG_UID}
			PG_VERSION=${PORTVERSION:R}
			DATADIR=${DATADIR}

VAR_OPSYS[sunos]=	CONFIGURE_ENV=ac_cv_search_bind_textdomain_codeset=-lintl
			CONFIGURE_ARGS=--with-template=solaris
			CONFIGURE_ARGS=--with-uuid=ossp
			LDFLAGS=-L{{PREFIX}}/lib/ossp
			LDFLAGS=-Wl,-rpath,{{PREFIX}}/lib/ossp
VAR_OPSYS[freebsd]=	CONFIGURE_ARGS=--with-template=freebsd
			CONFIGURE_ARGS=--with-uuid=bsd
VAR_OPSYS[dragonfly]=	CONFIGURE_ARGS=--with-template=freebsd
			CONFIGURE_ARGS=--with-uuid=bsd
VAR_OPSYS[midnightbsd]=	CONFIGURE_ARGS=--with-template=freebsd
			CONFIGURE_ARGS=--with-uuid=bsd
VAR_OPSYS[netbsd]=	CONFIGURE_ARGS=--with-template=netbsd
			CONFIGURE_ARGS=--with-uuid=bsd
VAR_OPSYS[openbsd]=	CONFIGURE_ARGS=--with-template=openbsd
			CONFIGURE_ARGS=--with-uuid=bsd
VAR_OPSYS[darwin]=	CONFIGURE_ARGS=--with-template=darwin
			CONFIGURE_ARGS=--with-uuid=e2fs
VAR_OPSYS[linux]=	CONFIGURE_ARGS=--with-template=linux
			CONFIGURE_ARGS=--with-uuid=ossp
			LDFLAGS=-L{{PREFIX}}/lib/ossp
			LDFLAGS=-Wl,-rpath,{{PREFIX}}/lib/ossp

post-patch-sunos:
	${REINPLACE_CMD} -e '/sqlmansect/d' \
		${WRKSRC}/src/makefiles/Makefile.solaris

post-install:
	${MKDIR} ${STAGEDIR}${PREFIX}/etc/periodic/daily
	${INSTALL_SCRIPT} ${WRKDIR}/502.pgsql \
		${STAGEDIR}${PREFIX}/etc/periodic/daily
	# install-world doesn't strip (and install-strip won't install enough)
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/postgresql/*.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/postgresql/pgxs/src/test/regress/pg_regress
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/postgresql/pgxs/src/test/isolation/isolationtester
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/postgresql/pgxs/src/test/isolation/pg_isolation_regress
	list=$$(${LS} ${STAGEDIR}${PREFIX}/bin/* | ${GREP} -v pltcl_); \
		${STRIP_CMD} $${list}
