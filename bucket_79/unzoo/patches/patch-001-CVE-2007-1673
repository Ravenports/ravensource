Addresses CVE-2007-1673

unzoo.c, as used in multiple products including AMaViS 2.4.1 and earlier,
allows remote attackers to cause a denial of service (infinite loop) via
a ZOO archive with a direntry structure that points to a previous file.
--- src/unzoo.c.orig	2025-04-23 17:10:34 UTC
+++ src/unzoo.c
@@ -2402,9 +2402,11 @@ int             ListArch ( ver, arc, fil
     /* loop over the members of the archive                                */
     Entry.posnxt = Descript.posent;
     while ( 1 ) {
+	unsigned long oldpos = Entry.posnxt;
 
         /* read the directory entry for the next member                    */
-        if ( ! GotoReadArch( Entry.posnxt ) || ! EntrReadArch() ) {
+        if ( ! GotoReadArch( Entry.posnxt ) || ! EntrReadArch() ||
+             Entry.posnxt <= oldpos ) {
             printf("unzoo: found bad directory entry in archive '%s'\n",arc);
             return 0;
         }
@@ -2558,9 +2560,11 @@ int             ExtrArch ( bim, out, ovr
     /* loop over the members of the archive                                */
     Entry.posnxt = Descript.posent;
     while ( 1 ) {
+	unsigned long oldpos = Entry.posnxt;
 
         /* read the directory entry for the next member                    */
-        if ( ! GotoReadArch( Entry.posnxt ) || ! EntrReadArch() ) {
+        if ( ! GotoReadArch( Entry.posnxt ) || ! EntrReadArch() ||
+             Entry.posnxt <= oldpos ) {
             printf("unzoo: found bad directory entry in archive '%s'\n",arc);
             return 0;
         }
