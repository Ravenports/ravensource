========================================
 kombu - Messaging library for Python
========================================

|build-status| |coverage| |license| |wheel| |pyversion| |pyimp|

:Version: 4.2.2
:Web: http://kombu.me/
:Download: https://pypi.python.org/pypi/kombu/
:Source: https://github.com/celery/kombu/
:Keywords: messaging, amqp, rabbitmq, redis, mongodb, python, queue

About
=====

`Kombu` is a messaging library for Python.

The aim of `Kombu` is to make messaging in Python as easy as possible by
providing an idiomatic high-level interface for the AMQ protocol, and also
provide proven and tested solutions to common messaging problems.

`AMQP`_ is the Advanced Message Queuing Protocol, an open standard protocol
for message orientation, queuing, routing, reliability and security,
for which the `RabbitMQ`_ messaging server is the most popular
implementation.

Features
========

* Allows application authors to support several message server
  solutions by using pluggable transports.

    * AMQP transport using the `py-amqp`_, `librabbitmq`_, or
`qpid-python`_ libraries.

    * High performance AMQP transport written in C - when using
`librabbitmq`_

      This is automatically enabled if librabbitmq is installed:

      ::

        $ pip install librabbitmq

    * Virtual transports makes it really easy to add support for non-AMQP
      transports. There is already built-in support for `Redis`_,
      `Amazon SQS`_, `ZooKeeper`_, `SoftLayer MQ`_ and `Pyro`_.

    * In-memory transport for unit testing.

* Supports automatic encoding, serialization and compression of message
  payloads.

* Consistent exception handling across transports.

* The ability to ensure that an operation is performed by gracefully
  handling connection and channel errors.

* Several annoyances with `amqplib`_ has been fixed, like supporting
  timeouts and the ability to wait for events on more than one channel.

* Projects already using `carrot`_ can easily be ported by using
  a compatibility layer.

For an introduction to AMQP you should read the article `Rabbits and
warrens`_,
and the `Wikipedia article about AMQP`_.

.. _`RabbitMQ`: https://www.rabbitmq.com/
.. _`AMQP`: https://amqp.org
.. _`py-amqp`: https://pypi.python.org/pypi/amqp/
.. _`qpid-python`: https://pypi.python.org/pypi/qpid-python/
.. _`Redis`: https://redis.io
.. _`Amazon SQS`: https://aws.amazon.com/sqs/
.. _`Zookeeper`: https://zookeeper.apache.org/
.. _`Rabbits and warrens`:
http://web.archive.org/web/20160323134044/http://blogs.digitar.com/jjww/200
9/01/rabbits-and-warrens/
.. _`amqplib`: https://barryp.org/software/py-amqplib/
.. _`Wikipedia article about AMQP`: https://en.wikipedia.org/wiki/AMQP
.. _`carrot`: https://pypi.python.org/pypi/carrot/
.. _`librabbitmq`: https://pypi.python.org/pypi/librabbitmq
.. _`Pyro`: https://pythonhosting.org/Pyro4
.. _`SoftLayer MQ`: https://sldn.softlayer.com/reference/messagequeueapi

.. _transport-comparison:

Transport Comparison
====================

+---------------+----------+------------+------------+---------------+-----
---------+-----------------------+
| **Client**    | **Type** | **Direct** | **Topic**  | **Fanout**    |
**Priority** | **TTL**               |
+---------------+----------+------------+------------+---------------+-----
---------+-----------------------+
| *amqp*        | Native   | Yes        | Yes        | Yes           | Yes
[#f3]_   | Yes [#f4]_            |
+---------------+----------+------------+------------+---------------+-----
---------+-----------------------+
| *qpid*        | Native   | Yes        | Yes        | Yes           | No
         | No                    |
+---------------+----------+------------+------------+---------------+-----
---------+-----------------------+
| *redis*       | Virtual  | Yes        | Yes        | Yes (PUB/SUB) | Yes
         | No                    |
+---------------+----------+------------+------------+---------------+-----
---------+-----------------------+
| *mongodb*     | Virtual  | Yes        | Yes        | Yes           | Yes
         | Yes                   |
+---------------+----------+------------+------------+---------------+-----
---------+-----------------------+
| *SQS*         | Virtual  | Yes        | Yes [#f1]_ | Yes [#f2]_    | No
         | No                    |
+---------------+----------+------------+------------+---------------+-----
---------+-----------------------+
| *zookeeper*   | Virtual  | Yes        | Yes [#f1]_ | No            | Yes
         | No                    |
+---------------+----------+------------+------------+---------------+-----
---------+-----------------------+
| *in-memory*   | Virtual  | Yes        | Yes [#f1]_ | No            | No
         | No                    |
