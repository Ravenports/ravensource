DEF[PORTVERSION]=	2018
DEF[DATE]=		20180524
# ------------------------------------------------------------------------

NAMEBASE=		libadalang
VERSION=		${PORTVERSION}
KEYWORDS=		python lang devel
VARIANTS=		py27
SDESC[py27]=		High-performance semantic engine for Ada (PY 27)
HOMEPAGE=		https://github.com/AdaCore/libadalang
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main langkit
SITES[main]=		http://downloads.dragonlace.net/src/
DISTFILE[1]=		libadalang-gpl-${PORTVERSION}-${DATE}-src.tar.gz:main
DISTFILE[2]=		langkit-gpl-${PORTVERSION}-${DATE}-src.tar.gz:main
DF_INDEX=		1 2

SPKGS[py27]=		single

OPTIONS_AVAILABLE=	DEBUG PY27
OPTIONS_STANDARD=	DEBUG
VOPTS[py27]=		PY27=ON DEBUG=ON

# Fixed in later versions, TERMS missing (GPLv3 not valid)
# LICENSE=		GPLv3+:single
# LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING3
# LICENSE_TERMS=	single:{{WRKDIR}}/TERMS
# LICENSE_SCHEME=	multi

BUILD_DEPENDS=		quex:single:adalang
BUILDRUN_DEPENDS=	gnatcoll-core:primary:standard
			gnatcoll-bindings:iconv:standard

USES=			gprbuild
MUST_CONFIGURE=		yes
INSTALL_REQ_TOOLCHAIN=	yes
DISTNAME=		libadalang-gpl-${PORTVERSION}-src

[PY27].USES_ON=				python:py27
[PY27].BUILD_DEPENDS_ON=		python-Sphinx:single:py27
					python-sphinx_rtd_theme:single:py27
[PY27].BUILDRUN_DEPENDS_ON=		python-Mako:single:py27
					python-PyYAML:single:py27
					python-coverage:single:py27
					python-psutil:single:py27
					python-funcy:single:py27
					python-docutils:single:py27
					python-autopep8:single:py27
					python-yapf:single:py27
					python-enum:single:py27
					python-enum34:single:py27

[DEBUG].MAKE_ARGS_ON=			--debug
					--full-error-traces
[DEBUG].MAKEFILE_ON=			WITH_DEBUG=yes

post-extract:
	${MV} ${WRKDIR}/langkit-* ${WRKSRC}/langkit
# #	${AWK} '/Libadalang is free software/,/www.gnu.org/' \
# #		${WRKSRC}/ada/copyright.py > ${WRKDIR}/TERMS

post-patch:
	# disable -Werror
	${REINPLACE_CMD} -e 's|, "-gnatwe"||' \
		${WRKSRC}/langkit/langkit/templates/project_file.mako \
		${WRKSRC}/langkit/langkit/templates/langkit_support_gpr.mako

post-patch-linux:
	${REINPLACE_CMD} -e 's|@PREFIX@|${PREFIX}|' \
		${WRKSRC}/langkit/langkit/templates/mains_project_file.mako

do-configure:
	# must build as static since rpaths are either missing,
	# refer to /construction, ignore gpr settings, etc
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} ada/manage.py\
		--verbosity info\
		--disable-shared\
		--enable-static\
		generate)

post-configure-dragonfly:
	# link executables with -lutil
	${PATCH} -d ${PATCH_WRKSRC} --backup --forward -E -p0 --batch \
		< ${FILESDIR}/pc-patch-build_src_mains.gpr

post-configure-freebsd:
	# link executables with -lutil
	${PATCH} -d ${PATCH_WRKSRC} --backup --forward -E -p0 --batch \
		< ${FILESDIR}/pc-patch-build_src_mains.gpr

do-build:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} ada/manage.py\
		--verbosity info\
		--disable-shared\
		--enable-static\
		${MAKE_ARGS:NDESTDIR=*}\
		build)

do-install:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} ada/manage.py \
		--disable-shared \
		--enable-static \
		install ${STAGEDIR}${PREFIX})
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gnat/manifests
