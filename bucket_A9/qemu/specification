DEF[PORTVERSION]=	7.2.0
DEF[JQUERY]=		EXTRACT_INFO(LATEST_JQUERY)
DEF[UNDERSCORE]=	EXTRACT_INFO(SPHINX_UNDERSCORE)
# ----------------------------------------------------------------------------

NAMEBASE=		qemu
VERSION=		${PORTVERSION}
KEYWORDS=		emulators
VARIANTS=		standard
SDESC[standard]=	Fast CPU emulator and virtualizer for x86 platform
HOMEPAGE=		https://www.qemu.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://download.qemu.org/
DISTFILE[1]=		qemu-${PORTVERSION}.tar.xz:main

SPKGS[standard]=	complete primary docs nls

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		GPLv2:primary
LICENSE_FILE=		GPLv2:{{WRKSRC}}/COPYING
LICENSE_TERMS=		primary:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		emulators/qemu

BUILD_DEPENDS=		texi2html:primary:standard
			python-Sphinx:single:python_used
			python-sphinx-rtd-theme:single:python_used
			harfbuzz:dev:standard
BUILDRUN_DEPENDS=	nettle:primary:standard
			fontconfig:primary:standard
			freetype:primary:standard
			gnutls:primary:standard
			cyrus-sasl:primary:standard
			curl:primary:standard
			vde2:single:standard
			libepoxy:single:standard
			snappy:single:standard

USES=			cpe gmake pkgconfig bison perl:build python:build
			jpeg png mesa gettext-runtime gettext-tools
			ncurses makeinfo ninja zstd lzo
XORG_COMPONENTS=	x11 xext
GNOME_COMPONENTS=	gdkpixbuf gtk2 vte
SDL_COMPONENTS=		sdl2 image2
MUST_CONFIGURE=		yes
MAKE_ENV=		BSD_MAKE="{{MAKE}}" V=1
# mutually exclusive: nettle or gcrypt
CONFIGURE_ARGS=		--disable-usb-redir
			--disable-stack-protector
			--disable-kvm
			--disable-xen
			--disable-vde
			--enable-docs
# #			--enable-debug
# #			--enable-debug-info
			--enable-nettle
			--enable-profiler
			--enable-curses
			--prefix={{PREFIX}}
			--cc={{CC}}
			--python={{PYTHON_CMD}}
			--localstatedir=/var
CFLAGS=			-I{{NCURSESBASE}}/include/ncursesw
PLIST_SUB=		JQUERY=${JQUERY}
			UNDERSCORE=${UNDERSCORE}
			MAN=""
BUILD_WRKSRC=		{{WRKSRC}}/build
INSTALL_WRKSRC=		{{WRKSRC}}/build

VAR_OPSYS[dragonfly]=	CONFIGURE_ARGS=--disable-netmap
			CONFIGURE_ARGS=--disable-linux-user
			CONFIGURE_ARGS=--disable-linux-aio
VAR_OPSYS[freebsd]=	CONFIGURE_ARGS=--enable-netmap
			CONFIGURE_ARGS=--disable-linux-user
			CONFIGURE_ARGS=--disable-linux-aio
VAR_OPSYS[linux]=	CONFIGURE_ARGS=--disable-netmap
# linux-user requires newer linux base, remove when that comes
			CONFIGURE_ARGS=--disable-linux-user

post-patch:
	# silence some include warnings
	${MKDIR} ${WRKSRC}/bsd-user/dragonfly

pre-configure-dragonfly:
	# On dragonfly, userland programs can't include <sys/disk.h>
	${REINPLACE_CMD} -e 's|sys/disk\.h|sys/skipdisk.h|' \
		${WRKSRC}/meson.build

post-install:
	${INSTALL_SCRIPT} ${FILESDIR}/qemu-ifup.sample \
		${STAGEDIR}${PREFIX}/etc
	${INSTALL_SCRIPT} ${FILESDIR}/qemu-ifdown.sample \
		${STAGEDIR}${PREFIX}/etc
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/qemu-*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/elf2dmp
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/share/qemu/palcode-clipper
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/share/qemu/hppa-firmware.img
	(cd ${WRKSRC} && ${COPYTREE_SHARE} docs ${STAGEDIR}${STD_DOCDIR}/)
	# remove sphinx leftovers
	${RM} -r ${STAGEDIR}${STD_DOCDIR}/docs/sphinx
	# remove empty directories
	${RM} -r ${STAGEDIR}/var
