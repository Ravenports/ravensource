--- src/corelib/configure.json.orig	2023-06-09 14:30:54 UTC
+++ src/corelib/configure.json
@@ -62,8 +62,7 @@
             },
             "headers": "iconv.h",
             "sources": [
-                { "libs": "-liconv", "condition": "config.openbsd || config.haiku" },
-                { "libs": "", "condition": "!(config.openbsd || config.haiku)" }
+                { "libs": "-liconv" }
             ]
         },
         "gnu_iconv": {
@@ -134,28 +133,14 @@
         "libatomic": {
             "label": "64 bit atomics",
             "test": {
-                "tail": [
-                    "void test(volatile std::atomic<std::int64_t> &a)",
-                    "{",
-                    "    std::int64_t v = a.load(std::memory_order_acquire);",
-                    "    while (!a.compare_exchange_strong(v, v + 1,",
-                    "                                      std::memory_order_acq_rel,",
-                    "                                      std::memory_order_acquire)) {",
-                    "        v = a.exchange(v - 1);",
-                    "    }",
-                    "    a.store(v + 1, std::memory_order_release);",
-                    "}"
-                ],
                 "main": [
                     "void *ptr = (void*)0xffffffc0; // any random pointer",
-                    "test(*reinterpret_cast<std::atomic<std::int64_t> *>(ptr));"
+                    "return 0;"
                 ],
                 "qmake": "CONFIG += c++11"
             },
-            "headers": [ "atomic", "cstdint" ],
             "sources": [
-                "",
-                "-latomic"
+                ""
             ]
         },
         "librt": {
