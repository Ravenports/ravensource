DEF[PORTVERSION]=	EXTRACT_INFO(FIREFOX52_VERSION)
# ----------------------------------------------------------------------------

NAMEBASE=		rustless-firefox
VERSION=		${PORTVERSION}
KEYWORDS=		www
VARIANTS=		standard
SDESC[standard]=	Legacy web browser built without Rust compiler
HOMEPAGE=		https://www.mozilla.org/en-US/firefox/organizations/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		MOZILLA/firefox/releases/${PORTVERSION}esr/source
DISTFILE[1]=		firefox-${PORTVERSION}esr.source.tar.xz:main

SPKGS[standard]=	single

OPTIONS_AVAILABLE=	DBUS
OPTIONS_STANDARD=	DBUS
OPT_ON[all]=		DBUS

LICENSE=		MPL:single
LICENSE_FILE=		MPL:stock
LICENSE_TERMS=		single:{{WRKSRC}}/toolkit/content/license.html
LICENSE_SCHEME=		solo

# FPC_EQUIVALENT=	started as www/firefox-esr, but this will expire

BUILD_DEPENDS=		python-sqlite3:single:py27
			video4linux:headers:standard
			autoconf213:single:standard
			bzip2:static:standard
			yasm:single:standard
			zip:single:standard
BUILDRUN_DEPENDS=	nss:primary:standard
			libevent:single:standard
			harfbuzz:primary:standard
			libvorbis:primary:standard
			libogg:primary:standard
			libvpx:single:standard
			libffi:single:standard
			sqlite:single:standard
			video4linux:primary:standard
			hunspell:single:standard
			icu:single:standard
			bzip2:shared:standard
			ffmpeg:primary:standard

USES=			cpe gmake jpeg png pkgconfig zlib
			perl:build python:py27,build desktop-utils:single
XORG_COMPONENTS=	xcb pixman
GNOME_COMPONENTS=	gdkpixbuf gtk2 gtk3 gconf
DISTNAME=		firefox-${PORTVERSION}esr
CPE_VENDOR=		mozilla
MUST_CONFIGURE=		yes
CONFIGURE_OUTSOURCE=	yes
# QMAKE_ARGS are repurposed
QMAKE_ARGS=		--prefix={{PREFIX:Q}}
			--disable-rust
			--disable-updater
			--disable-libproxy
			--disable-alsa
			--disable-jack
			--disable-pulseaudio
			--disable-debug
			--disable-debug-symbols
			--disable-dtrace
			--disable-profiling
			--disable-tests
			--disable-webrtc
			--enable-system-cairo
			--enable-system-ffi
			--enable-system-hunspell
			--enable-system-pixman
			--enable-system-sqlite
			--with-system-libevent
			--with-system-harfbuzz
			--with-system-graphite2
			--with-system-icu
			--with-system-nss
			--with-system-nspr
			--with-system-vorbis
			--with-system-ogg
			--with-system-libvpx
			--with-system-zlib
			--with-system-bz2
			--with-system-jpeg={{LOCALBASE}}
			--with-system-png={{LOCALBASE}}
			--with-intl-api
			--with-pthreads
			--enable-release
			--enable-chrome-format=omni
			--enable-default-toolkit=cairo-gtk3
			--enable-update-channel=esr
			--enable-optimize
			--enable-gconf
			--enable-pie
			--enable-strip
			--enable-install-strip
			--enable-application=browser
			--enable-official-branding

VAR_OPSYS[freebsd]=	CONFIGURE_ARGS=--enable-jemalloc=4
VAR_OPSYS[linux]=	QMAKE_ARGS=--disable-elf-hack

SUB_FILES=		firefox.desktop
			pkg-install-single
			pkg-deinstall-single
SUB_LIST=		FIREFOX_ICON=firefox.png
			MOZILLA=firefox
			MOZILLA_BIN=firefox-bin
			MOZILLA_NAME=Firefox
			MOZDIR={{PREFIX}}/lib/firefox

# review soundtouch (bsd.gecko.mk)

[DBUS].DESCRIPTION=			D-Bus IPC system support
[DBUS].QMAKE_ARGS_ON=			--enable-startup-notification
[DBUS].QMAKE_ARGS_OFF=			--disable-dbus
[DBUS].BUILDRUN_DEPENDS_ON=		dbus:single:standard
					dbus-glib:primary:standard
					startup-notification:single:standard
					libnotify:primary:standard

post-patch:
	${REINPLACE_CMD} -e 's|%%LOCALBASE%%|${LOCALBASE}|g' \
		${WRKSRC}/browser/app/nsBrowserApp.cpp
	${REINPLACE_CMD} -e 's|%%MOZILLA%%|firefox|g' \
		${WRKSRC}/config/baseconfig.mk; \
	${REINPLACE_CMD} -e 's|%%PREFIX%%|${PREFIX}|g ; \
		s|%%LOCALBASE%%|${LOCALBASE}|g' \
			${WRKSRC}/build/unix/run-mozilla.sh
	${REINPLACE_CMD} -e 's|/usr/local/netscape|${LOCALBASE}|g ; \
		s|/usr/local/lib/netscape|${LOCALBASE}/lib|g' \
		${WRKSRC}/xpcom/io/SpecialSystemDirectory.cpp
	${REINPLACE_CMD} -e 's|/etc|${PREFIX}&|g' \
		${WRKSRC}/xpcom/build/nsXPCOMPrivate.h
	${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|g' \
		-e 's|mozilla/plugins|browser_plugins|g' \
		-e 's|share/mozilla/extensions|lib/xpi|g' \
		${WRKSRC}/xpcom/io/nsAppFileLocationProvider.cpp \
		${WRKSRC}/toolkit/xre/nsXREDirProvider.cpp
	${REINPLACE_CMD} -e 's|%%LOCALBASE%%|${LOCALBASE}|g' \
		${WRKSRC}/extensions/spellcheck/hunspell/*/mozHunspell.cpp
	${REINPLACE_CMD} -Ee 's|-lc_r|-pthread|g ; \
			s|-l?pthread|-pthread|g ; \
			s|echo aout|echo elf|g ; \
			s|/usr/X11R6|${LOCALBASE}|g' \
		${WRKSRC}/js/src/Makefile.in \
		${WRKSRC}/js/src/configure \
		${WRKSRC}/configure
	${REINPLACE_CMD} -Ee '/^MOZ_FIX_LINK_PATHS=/ s|"|"-Wl,-rpath,${PREFIX}/lib/firefox |' \
		${WRKSRC}/js/src/old-configure.in \
		${WRKSRC}/old-configure.in

	# set configuration
	for arg in ${QMAKE_ARGS} ; do \
		${ECHO_CMD} ac_add_options $$arg >> ${WRKSRC}/.mozconfig ; \
	done
	${ECHO_CMD} mk_add_options MOZ_OBJDIR="${BUILD_WRKSRC}" \
		>> ${WRKSRC}/.mozconfig
	${ECHO_CMD} export MOZ_OPTIMIZE_FLAGS="-O${OPTIMIZER_LEVEL}" \
		>> ${WRKSRC}/.mozconfig
	${ECHO_CMD} export PERL="${PERL}" >> ${WRKSRC}/.mozconfig


post-patch-freebsd:
	${ECHO_CMD} export MOZ_JEMALLOC4=1 >> ${WRKSRC}/.mozconfig

	# API keys from www/chromium
	# http://www.chromium.org/developers/how-tos/api-keys
	# Note: these are for FreeBSD use ONLY. For another distribution,
	# please obtain its key instead.
	${ECHO_CMD} export MOZ_GOOGLE_API_KEY=AIzaSyBsp9n41JLW8jCokwn7vhoaMejDFRd1mp8 \
		>> ${WRKSRC}/.mozconfig

pre-configure:
	(cd ${WRKSRC} && ${LOCALBASE}/bin/autoconf-2.13)
	(cd ${WRKSRC}/js/src/ && ${LOCALBASE}/bin/autoconf-2.13)

post-install:
	@${MKDIR} ${STAGEDIR}${PREFIX}/share/pixmaps \
		${STAGEDIR}${PREFIX}/share/applications
	${INSTALL_DATA} ${WRKDIR}/firefox.desktop \
		${STAGEDIR}${PREFIX}/share/applications/
	${LN} -sf ${PREFIX}/lib/firefox/browser/chrome/icons/default/default48.png \
		${STAGEDIR}${PREFIX}/share/pixmaps/firefox.png
